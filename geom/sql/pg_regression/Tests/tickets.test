query TT rowsort
SELECT '#2', ST_AsText(ST_Union(g)) FROM
( VALUES
(ST_GeomFromText('MULTIPOLYGON(((1 1,1 2,2 2,2 1,1 1)))', 4326)),
(ST_GeomFromText('MULTIPOLYGON(((2 1,3 1,3 2,2 2,2 1)))', 4326))
) AS v(g)
----
#2
POLYGON ((1 1, 1 2, 2 2, 3 2, 3 1, 2 1, 1 1))

query TR rowsort
SELECT '#11', ST_Distance (a.g, ST_Intersection(b.g, a.g)) AS distance
FROM (SELECT ST_WKBToSQL('01020000000200000050E8303FC2E85141B017CFC05A825541000000E0C0E85141000000205C825541') AS g) a,
	 (SELECT ST_WKTToSQL('LINESTRING(4694792.35840419 5638508.89950758,4694793.20840419 5638506.34950758)') AS g) b
----
#11
0.000

statement error
SELECT '#21', ST_AsEWKT(ST_Locate_Along_Measure(g, 4566)) FROM
( VALUES
(ST_GeomFromText('LINESTRINGM( 6193.76 5337404.95 4519, 6220.13 5337367.145 4566, 6240.889 5337337.383 4603 )', 31293))
) AS v(g)

query T rowsort
SELECT ST_Within(ST_WKTToSQL('POLYGON((4 9,6 9,6 11,4 11,4 9))'), ST_WKTToSQL('POLYGON((0 0,10 0,20 10,10 20,0 20,-10 10,0 0))'))
----
True

query TTT rowsort
SELECT '#44', ST_Relate(g1, g2, 'T12101212'), ST_Relate(g1, g2, 't12101212') FROM
(VALUES
(ST_WKTToSQL('POLYGON((0 0, 2 0, 2 2, 0 2, 0 0))'), ST_WKTToSQL('POLYGON((1 1, 3 1, 3 3, 1 3, 1 1))'))
) AS v(g1, g2)
----
#44
True
False

statement error
SELECT '#58', round(ST_xmin(g)),round(ST_ymin(g)),round(ST_xmax(g)),round(ST_ymax(g))
FROM (SELECT ST_Envelope(ST_WKTToSQL('CIRCULARSTRING(220268.439465645 150415.359530563,220227.333322076 150505.561285879,220227.353105332 150406.434743975)')) as g)  AS foo

statement error
SELECT '#65', ST_AsGML(ST_GeometryFromText('CURVEPOLYGON(CIRCULARSTRING(4 2,3 -1.0,1 -1,-1.0 4,4 2))'))

statement error
SELECT '#66', * FROM ST_Dump(ST_GeomFromText('CIRCULARSTRING(0 0,1 1,2 2)'))

statement error
SELECT '#68a', ST_AsText(ST_Shift_Longitude(ST_GeomFromText('MULTIPOINT(1 3, 4 5)')))

statement error
SELECT '#68b', ST_AsText(ST_Shift_Longitude(ST_GeomFromText('CIRCULARSTRING(1 3, 4 5, 6 7)')))

statement error
SELECT '#69', ST_AsText(ST_Translate(ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 150406)'),1,2))

statement error
SELECT '#70', ST_NPoints(ST_LinetoCurve(ST_Buffer('POINT(1 2)',3)))

statement error
SELECT '#73', ST_AsText(ST_ForceCollection(ST_GeomFromText('CIRCULARSTRING(1 1, 2 3, 4 5, 6 7, 5 6)')))

statement error
SELECT '#80', ST_AsText(ST_Multi('MULTILINESTRING((0 0,1 1))'))

statement error
SELECT '#83', ST_AsText(ST_Multi(ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 150406)')))

statement error
SELECT '#85', ST_Distance(ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 150406)'), ST_Point(220268, 150415))

statement error
SELECT '#112', ST_AsText(ST_CurveToLine('GEOMETRYCOLLECTION(POINT(-10 50))'))

statement error
SELECT '#113', ST_Locate_Along_Measure('LINESTRING(0 0 0, 1 1 1)', 0.5)

query TT rowsort
SELECT '#116', ST_AsText('010300000000000000')
----
#116
POLYGON EMPTY

statement error
SELECT '#122', ST_AsText(ST_SnapToGrid(ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 150406)'), 0.1))

statement error
SELECT '#124a', ST_AsText(ST_GeomFromText('COMPOUNDCURVE(CIRCULARSTRING(0 0,1 1,1 0),(1 0,30 5),CIRCULARSTRING(30 5,34 56,67 89))'))

statement error
SELECT '#124b', ST_AsText(ST_GeomFromText('COMPOUNDCURVE(CIRCULARSTRING(0 0,1 1,1 0),(1 0,30 6),CIRCULARSTRING(30 5,34 56,67 89))'))

statement error
SELECT '#145a', encode(ST_AsEWKB(ST_Buffer(ST_GeomFromText('LINESTRING(-116.93414544665981 34.16033385105459,-116.87777514700957 34.10831080544884,-116.86972224705954 34.086748622072776,-116.9327074288116 34.08458099517253,-117.00216369088065 34.130329331330216,-117.00216369088065 34.130329331330216)', 4326), 0),'ndr'),'hex')

query TR rowsort
SELECT '#145b', ST_Area(ST_Buffer(ST_GeomFromText('LINESTRING(-116.93414544665981 34.16033385105459,-116.87777514700957 34.10831080544884,-116.86972224705954 34.086748622072776,-116.9327074288116 34.08458099517253,-117.00216369088065 34.130329331330216,-117.00216369088065 34.130329331330216)', 4326), 0))
----
#145b
0.000

query TRTT rowsort
SELECT '#146', ST_Distance(g1,g2), ST_Dwithin(g1,g2,0.01), ST_AsEWKT(g2) FROM (SELECT ST_geomFromText('LINESTRING(1 2, 2 4)') As g1, ST_Collect(ST_GeomFromText('LINESTRING(0 0, -1 -1)'), ST_GeomFromText('MULTIPOINT(1 2,2 3)')) As g2) As foo
----
#146
0.000
True
SRID:0;GEOMETRYCOLLECTION (LINESTRING (0 0, -1 -1), POINT (1 2), POINT (2 3))

statement error
SELECT
	'#157',
	ST_GeometryType(g) As newname,
	GeometryType(g) as oldname
FROM ( VALUES
	(ST_GeomFromText('POLYGON((-0.25 -1.25,-0.25 1.25,2.5 1.25,2.5 -1.25,-0.25 -1.25), (2.25 0,1.25 1,1.25 -1,2.25 0),(1 -1,1 1,0 0,1 -1))') ),
	( ST_Point(1,2) ),
	( ST_Buffer(ST_Point(1,2), 3) ),
	( ST_LineToCurve(ST_Buffer(ST_Point(1,2), 3)) ) ,
	( ST_LineToCurve(ST_Boundary(ST_Buffer(ST_Point(1,2), 3))) )
	) AS v(g)

query TT rowsort
SELECT '#175', ST_AsEWKT(ST_GeomFromText('POINT(482020 4984378.)', 26915))
----
#175
SRID:26915;POINT (482020 4984378)

query TR rowsort
SELECT '#178a', ST_XMin(ST_MakeBox2D(ST_Point(5, 5), ST_Point(0, 0)))
----
#178a
0.000

query TR rowsort
SELECT '#178b', ST_XMax(ST_MakeBox2D(ST_Point(5, 5), ST_Point(0, 0)))
----
#178b
5.000

statement error
SELECT '#183', ST_AsText(ST_SnapToGrid(ST_LineToCurve(ST_LineMerge(ST_Collect(ST_CurveToLine(ST_GeomFromText('CIRCULARSTRING(0 0, 1 1, 1 0)')),ST_GeomFromText('LINESTRING(1 0, 0 1)') ))), 1E-10))

statement error
SELECT '#213', round(ST_Perimeter(ST_CurveToLine(ST_GeomFromText('CURVEPOLYGON(COMPOUNDCURVE(CIRCULARSTRING(0 0,2 0, 2 1, 2 3, 4 3),(4 3, 4 5, 1 4, 0 0)))'))))

statement error
SELECT '#234', ST_AsText(ST_GeomFromText('COMPOUNDCURVE( (0 0,1 1) )'))

statement ok
CREATE TABLE c ( the_geom GEOMETRY)

statement ok
INSERT INTO c SELECT ST_MakeLine(ST_Point(-10,40),ST_Point(40,-10)) As the_geom

statement ok
INSERT INTO c SELECT ST_MakeLine(ST_Point(-10,40),ST_Point(40,-10)) As the_geom

statement error
SELECT '#241', sum(ST_LineCrossingDirection(the_geom, ST_GeomFromText('LINESTRING(1 2,3 4)'))) FROM c

statement ok
DROP TABLE c

statement error
SELECT '#254', encode(ST_AsEWKB(ST_Segmentize(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY'), 0.5),'ndr'),'hex')

statement error
SELECT '#259', ST_Distance(ST_GeographyFromText('POLYGON EMPTY', 4326), ST_GeographyFromText('POINT(1 2)', 4326))

statement error
SELECT '#260', round(ST_Distance(ST_GeographyFromText('POINT(-10 40)', 4326), ST_GeographyFromText('POINT(-10 55)', 4326)))

statement error
SELECT '#261', ST_Distance(ST_GeographyFromText('POINT(-71.0325022849392 42.3793285830812)', 4326),ST_GeographyFromText('POLYGON((-71.0325022849392 42.3793285830812,-71.0325745928559 42.3793012556699,-71.0326708728343 42.3794450989722,-71.0326045866257 42.3794706688942,-71.0325022849392 42.3793285830812))', 4326))

statement error
SELECT '#262', ST_AsText(pt.the_geog) As wkt_pt, ST_Covers(poly.the_geog, pt.the_geog) As geog,
	ST_Covers(
		ST_Transform(CAST(poly.the_geog As geometry),32611),
		ST_Transform(CAST(pt.the_geog As geometry),32611)) As utm,
	ST_Covers(
		CAST(poly.the_geog As geometry),
		CAST(pt.the_geog As geometry)
	) As pca
FROM (SELECT ST_GeographyFromText('POLYGON((-119.5434 34.9438,-119.5437 34.9445,-119.5452 34.9442,-119.5434 34.9438))', 4326) As the_geog)
	As poly
    CROSS JOIN
	(VALUES
		( ST_GeographyFromText('POINT(-119.5434 34.9438)', 4326) ) ,
		( ST_GeographyFromText('POINT(-119.5452 34.9442)', 4326) ) ,
		( ST_GeographyFromText('POINT(-119.5434 34.9438)', 4326) ),
		( ST_GeographyFromText('POINT(-119.5438 34.9443)', 4326)  )
	)
	As pt(the_geog)

statement error
SELECT '#263', ST_AsEWKT(geometry(geography(pt.the_geom))) As wkt,
	ST_Covers(
		ST_Transform(poly.the_geom,32611),
		ST_Transform(pt.the_geom,32611)) As utm,
	ST_Covers(
		poly.the_geom,
		pt.the_geom)
	 As pca,
	ST_Covers(geometry(geography(poly.the_geom)),
		geometry(geography(pt.the_geom))) As gm_to_gg_gm_pca
FROM (SELECT ST_GeomFromText('POLYGON((-119.5434 34.9438,-119.5437 34.9445,-119.5452 34.9442,-119.5434 34.9438))', 4326) As the_geom)
	As poly
    CROSS JOIN
	(VALUES
		( ST_GeomFromText('POINT(-119.5434 34.9438)', 4326) ) ,
		( ST_GeomFromText('POINT(-119.5452 34.9442)', 4326) ) ,
		( ST_GeomFromText('POINT(-119.5434 34.9438)', 4326) ),
		( ST_GeomFromText('POINT(-119.5438 34.9443)', 4326)  )
	)
	As pt(the_geom)

statement error
SELECT '#271', ST_Covers(
'POLYGON((-9.123456789 50,51 -11.123456789,-10.123456789 50,-9.123456789 50))'::geography,
'POINT(-10.123456789 50)'::geography
)

statement error
SELECT '#272', ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,
    ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1
FROM (SELECT
    ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1, ST_GeomFromText('LINESTRING(2.99 90.16,71 74,20 140,171 154)') As line2 ) As foo

statement error
SELECT '#277', ST_AsGML(2, ST_GeomFromText('POINT(1 1e308)'))

statement error
SELECT '#299', round(ST_Y(geometry(ST_Intersection(ST_GeographyFromText('POINT(1.2456 2)'), ST_GeographyFromText('POINT(1.2456 2)')))))

query T rowsort
SELECT '#304'
----
#304

statement error
CREATE OR REPLACE FUNCTION utmzone(geometry)
  RETURNS integer AS
$BODY$
DECLARE
    geomgeog geometry;
    zone int;
    pref int;
BEGIN
    geomgeog:= ST_Transform($1,4326);
    IF (ST_Y(geomgeog))>0 THEN
       pref:=32600;
    ELSE
       pref:=32700;
    END IF;
    zone:=floor((ST_X(geomgeog)+180)/6)+1;
    IF ( zone > 60 ) THEN zone := 60; END IF;
    RETURN zone+pref;
END

statement error
$BODY$ LANGUAGE 'plpgsql' IMMUTABLE
  COST 100

statement error
CREATE TABLE utm_dots ( the_geog geography, utm_srid integer)

statement error
INSERT INTO utm_dots SELECT geography(ST_SetSRID(ST_Point(i*10,j*10),4326)) As the_geog, utmzone(ST_SetSRID(ST_Point(i*10,j*10),4326)) As utm_srid FROM generate_series(-17,17) As i CROSS JOIN generate_series(-8,8) As j

statement error
SELECT ST_AsText(the_geog) as the_pt,
       utm_srid,
       ST_Area(ST_Buffer(the_geog,10)) As the_area,
       ST_Area(geography(ST_Transform(ST_Buffer(ST_Transform(geometry(the_geog),utm_srid),10),4326))) As geog_utm_area
FROM utm_dots
WHERE ST_Area(ST_Buffer(the_geog,10)) NOT between 307 and 315
LIMIT 10

statement error
SELECT '#304.a', Count(*) FROM utm_dots WHERE ST_DWithin(the_geog, 'POINT(0 0)'::geography, 3000000)

statement error
CREATE INDEX utm_dots_gix ON utm_dots USING GIST (the_geog)

statement error
SELECT '#304.b', Count(*) FROM utm_dots WHERE ST_DWithin(the_geog, 'POINT(0 0)'::geography, 300000)

statement error
DROP FUNCTION utmzone(geometry)

statement error
DROP TABLE utm_dots

statement error
SELECT '#408', substring(st_isvalidreason('0105000020E0670000010000000102000020E06700000100000016DA52BA62A04141FFF3AD290B735241') from E'.*\\[')

statement error
SELECT '#408.1', st_isvalid('01050000000100000001020000000100000000000000000000000000000000000000')

statement error
SELECT '#408.2', st_isvalidreason('01020000000100000000000000000000000000000000000000')

statement error
SELECT '#408.3', st_isvalid

statement error
SELECT '#408.4', st_isvalidreason('')

statement error
SELECT '#457.1', st_astext(st_collectionExtract('POINT(0 0)', 1))

statement error
SELECT '#457.2', st_astext(st_collectionExtract('POINT(0 0)', 2))

statement error
SELECT '#457.3', st_astext(st_collectionExtract('POINT(0 0)', 3))

statement error
SELECT '#457.4', st_astext(st_collectionExtract('LINESTRING(0 0, 1 1)', 1))

statement error
SELECT '#457.5', st_astext(st_collectionExtract('LINESTRING(0 0, 1 1)', 2))

statement error
SELECT '#457.6', st_astext(st_collectionExtract('LINESTRING(0 0, 1 1)', 3))

statement error
SELECT '#457.7', st_astext(st_collectionExtract('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 1))

statement error
SELECT '#457.8', st_astext(st_collectionExtract('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 2))

statement error
SELECT '#457.9', st_astext(st_collectionExtract('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 3))

statement error
SELECT '#835.1', st_astext(st_collectionExtract('POLYGON EMPTY', 1))

statement error
SELECT '#835.2', st_astext(st_collectionExtract('POLYGON EMPTY', 2))

statement error
SELECT '#835.3', st_astext(st_collectionExtract('POLYGON EMPTY', 3))

statement error
SELECT '#835.4', st_astext(st_collectionExtract('LINESTRING EMPTY', 1))

statement error
SELECT '#835.5', st_astext(st_collectionExtract('LINESTRING EMPTY', 2))

statement error
SELECT '#835.6', st_astext(st_collectionExtract('LINESTRING EMPTY', 3))

statement error
SELECT '#835.7', st_astext(st_collectionExtract('POINT EMPTY', 1))

statement error
SELECT '#835.8', st_astext(st_collectionExtract('POINT EMPTY', 2))

statement error
SELECT '#835.9', st_astext(st_collectionExtract('POINT EMPTY', 3))

statement error
SELECT '#835.10', st_astext(st_collectionExtract('GEOMETRYCOLLECTION EMPTY', 1))

statement error
SELECT '#835.11', st_astext(st_collectionExtract('GEOMETRYCOLLECTION EMPTY', 2))

statement error
SELECT '#835.12', st_astext(st_collectionExtract('GEOMETRYCOLLECTION EMPTY', 3))

statement error
SELECT '#650', ST_AsText(ST_Collect(ARRAY[ST_MakePoint(0,0), ST_MakePoint(1,1), null, ST_MakePoint(2,2)]))

statement error
SELECT '#667', ST_AsEWKT(ST_LineToCurve(ST_Buffer(ST_SetSRID(ST_Point(i,j),4326), j))) As the_geom FROM generate_series(-10,50,10) As i CROSS JOIN generate_series(40,70, 20) As j ORDER BY i, j, i*j LIMIT 1

statement error
SELECT '#677',round(ST_Distance_Spheroid(ST_GeomFromText('MULTIPOLYGON(((-10 40,-10 55,-10 70,5 40,-10 40)))'), ST_GeomFromText('MULTIPOINT(20 40,20 55,20 70,35 40,35 55,35 70,50 40,50 55,50 70)'), 'SPHEROID["GRS_1980",6378137,298.257222101]')) As result

statement error
SELECT '#680', encode(ST_AsBinary(geography(foo1.the_geom),'ndr'),'hex') As result FROM ((SELECT ST_SetSRID(ST_MakePointM(i,j,m),4326) As the_geom FROM generate_series(-10,50,10) As i CROSS JOIN generate_series(50,70, 20) AS j CROSS JOIN generate_series(1,2) As m ORDER BY i, j, i*j*m)) As foo1 LIMIT 1

statement error
SELECT '#681a', ST_AsGML(ST_GeomFromText('POINT EMPTY', 4326))

statement error
SELECT '#681b', ST_AsGML(ST_GeomFromText('POLYGON EMPTY', 4326))

statement error
SELECT '#681c', ST_AsGML(ST_GeomFromText('LINESTRING EMPTY', 4326))

statement error
SELECT '#681d', ST_AsGML(ST_GeomFromText('MULTIPOINT EMPTY', 4326))

statement error
SELECT '#681e', ST_AsGML(ST_GeomFromText('MULTILINESTRING EMPTY', 4326))

statement error
SELECT '#681f', ST_AsGML(ST_GeomFromText('MULTIPOLYGON EMPTY', 4326))

statement error
SELECT '#681g', ST_AsGML(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY', 4326))

statement error
SELECT '#682', encode(ST_AsEWKB(ST_Buffer(ST_GeomFromText('POLYGON EMPTY',4326) , 0.5), 'ndr'),'hex')

statement error
SELECT '#683', encode(ST_AsEWKB(ST_BuildArea(ST_GeomFromText('POINT EMPTY',4326)),'ndr'),'hex')

statement error
SELECT '#684,#2109', ST_AsEWKT(ST_Centroid(ST_GeomFromText('POLYGON EMPTY',4326)))

statement error
SELECT '#2109', ST_AsEWKT(ST_Centroid(ST_GeomFromText('MULTILINESTRING ZM EMPTY',3395)))

statement error
SELECT '#685', encode(ST_AsEWKB(ST_ConvexHull(ST_GeomFromText('POLYGON EMPTY',4326)),'ndr'),'hex')

statement error
SELECT '#686', encode(ST_AsEWKB(ST_COLLECT(ST_GeomFromText('POLYGON EMPTY',4326),ST_GeomFromText('TRIANGLE EMPTY',4326)),'ndr'),'hex')

statement error
SELECT '#687', ST_DFullyWithin(ST_GeomFromText('LINESTRING(-10 50,50 -10)',4326), ST_GeomFromText('POLYGON EMPTY',4326),5)

query TT rowsort
SELECT '#689', ST_CoveredBy(ST_GeomFromText('POLYGON EMPTY'), ST_GeomFromText('LINESTRING(-10 50,50 -10)'))
----
#689
False

query T rowsort
SELECT '#690'
----
#690

statement error
SELECT encode(ST_AsEWKB(ST_MakeLine(ST_GeomFromText('POINT(-11.1111111 40)'), ST_GeomFromText('LINESTRING(-11.1111111 70,70 -11.1111111)')),'ndr'), 'hex') As result

statement error
SELECT '#693a', encode(ST_AsEWKB(ST_GeomFromText('SRID=4326;POLYGONM((-71.1319 42.2503 1,-71.132 42.2502 3,-71.1323 42.2504 -2,-71.1322 42.2505 1,-71.1319 42.2503 0))'),'ndr'),'hex')

statement error
SELECT '#693b', encode(ST_AsEWKB(ST_GeomFromText('SRID=4326;POLYGONM((-71.1319 42.2512 0,-71.1318 42.2511 20,-71.1317 42.2511 -20,-71.1317 42.251 5,-71.1317 42.2509 4,-71.132 42.2511 6,-71.1319 42.2512 30))'),'ndr'),'hex')

query T rowsort
SELECT '#694'
----
#694

statement error
SELECT ST_MakePolygon('POINT(1 2)'::geometry)

query T rowsort
SELECT '#695'
----
#695

statement error
SELECT ST_RemovePoint('POINT(-11.1111111 40)'::geometry, 1)

statement error
SELECT '#696', encode(ST_AsEWKB(ST_Segmentize(ST_GeomFromText('PolyhedralSurface( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)), ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)), ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'), 0.5),'ndr'),'hex')

statement error
SELECT '#720', ST_AsText(ST_SnapTogrid(ST_Transform(ST_GeomFromText('MULTIPOINT(-10 40,-10 55,-10 70,5 40,5 55,5 70,20 40,20 55,20 70,35 40,35 55,35 70,50 40,50 55,50 70)',4326), 3395), 0.01))

statement error
SELECT '#723',
 encode(ST_AsEWKB(ST_SnapToGrid( ST_Intersection(a.geog, b.geog)::geometry, 0.00001),'ndr'),'hex')
FROM (VALUES (ST_GeogFromText('SRID=4326;POINT(-11.1111111 40)') ), (ST_GeogFromText('SRID=4326;POINT(-11.1111111 55)') ) ) As  a(geog) CROSS JOIN ( VALUES (ST_GeogFromText('SRID=4326;POINT(-11.1111111 40)') ), (ST_GeogFromText('SRID=4326;POINT(-11.1111111 55)') )) As b(geog)

statement error
SELECT '#804', ST_AsGML(3, 'SRID=4326;POINT(0 0)'::geometry, 0, 1)

statement error
SELECT '#845', ST_Intersects('POINT(169.69960846592 -46.5061209281002)'::geometry, 'POLYGON((169.699607857174 -46.5061218662,169.699607857174 -46.5061195965597,169.699608806526 -46.5061195965597,169.699608806526 -46.5061218662,169.699607857174 -46.5061218662))'::geometry)

query TT rowsort
SELECT '#834', ST_AsEWKT(ST_Intersection('LINESTRING(0 0,0 10,10 10,10 0)', 'LINESTRING(10 10 4,10 0 5,0 0 5)'))
----
#834
SRID:0;GEOMETRYCOLLECTION Z (POINT Z (0 0 5), LINESTRING Z (10 10 5, 10 0 5))

statement ok
CREATE TABLE foo (id integer, the_geom geometry)

statement ok
INSERT INTO foo VALUES (1, st_geomfromtext('MULTIPOLYGON(((-113.6 35.4,-113.6 35.8,-113.2 35.8,-113.2 35.4,-113.6 35.4),(-113.5 35.5,-113.3 35.5,-113.3 35.7,-113.5 35.7,-113.5 35.5)))'))

statement ok
INSERT INTO foo VALUES (2, st_geomfromtext('MULTIPOLYGON(((-113.7 35.3,-113.7 35.9,-113.1 35.9,-113.1 35.3,-113.7 35.3),(-113.6 35.4,-113.2 35.4,-113.2 35.8,-113.6 35.8,-113.6 35.4)),((-113.5 35.5,-113.5 35.7,-113.3 35.7,-113.3 35.5,-113.5 35.5)))'))

query TIT rowsort
select '#884', id, ST_Within(
ST_GeomFromText('POINT (-113.4 35.6)'), the_geom
) from foo
----
#884
1
False
#884
2
True

statement error
select '#938', 'POLYGON EMPTY'::geometry::box2d

statement ok
DROP TABLE foo

statement error
select '#668',box2d('CIRCULARSTRING(10 2,12 2,14 2)'::geometry) as b

statement error
select '#711', ST_GeoHash(ST_GeomFromText('POLYGON EMPTY',4326))

query TT rowsort
SELECT '#712',ST_IsValid(ST_GeomFromText('POLYGON EMPTY',4326))
----
#712
True

statement error
WITH inp AS ( SELECT 'LINESTRING(0 0, 1 1)'::geometry as s,
                     'LINESTRING EMPTY'::geometry as e      )
 SELECT '#756.1', ST_Equals(s, st_multi(s)),
                  ST_Equals(s, st_collect(s, e))
 FROM inp

statement error
select '#1023', 'POINT(10 4)'::geometry = 'POINT(10 4)'::geometry

statement error
select '#1023.a', 'POINT(10 4)'::geometry = 'POINT(10 5)'::geometry

statement error
select '#1023.b', postgis_addbbox('POINT(10 4)'::geometry) = 'POINT(10 4)'::geometry

statement error
select '#1060', ST_Relate(ST_GeomFromText('POINT EMPTY',4326), ST_GeomFromText('POINT EMPTY',4326)) As result

statement error
WITH p AS ( SELECT 'POINT(832694.188 816254.625)'::geometry as g )
SELECT '#1273', st_equals(p.g, postgis_addbbox(p.g)) from p

statement error
WITH p AS ( SELECT 'MULTIPOINT((832694.188 816254.625))'::geometry as g )
SELECT '#1273.1', st_equals(p.g, postgis_dropbbox(p.g)) from p

statement ok
create table t(g geometry)

statement error
select '#877.1', ST_EstimatedExtent('t','g')

statement error
analyze t

statement error
select '#877.2', ST_EstimatedExtent('public', 't','g')

statement error
SET client_min_messages TO DEBUG

statement error
select '#877.2.deprecated', ST_Estimated_Extent('public', 't','g')

statement error
SET client_min_messages TO NOTICE

statement ok
insert into t(g) values ('LINESTRING(-10 -50, 20 30)')

statement error
with e as ( select ST_EstimatedExtent('t','g') as e )
select '#877.3', round(st_xmin(e.e)::numeric, 5), round(st_xmax(e.e)::numeric, 5),
round(st_ymin(e.e)::numeric, 5), round(st_ymax(e.e)::numeric, 5) from e

statement error
analyze t

statement error
with e as ( select ST_EstimatedExtent('t','g') as e )
select '#877.4', round(st_xmin(e.e)::numeric, 5), round(st_xmax(e.e)::numeric, 5),
round(st_ymin(e.e)::numeric, 5), round(st_ymax(e.e)::numeric, 5) from e

statement ok
truncate t

statement error
with e as ( select ST_EstimatedExtent('t','g') as e )
select '#877.5', round(st_xmin(e.e)::numeric, 5), round(st_xmax(e.e)::numeric, 5),
round(st_ymin(e.e)::numeric, 5), round(st_ymax(e.e)::numeric, 5) from e

statement ok
drop table t

statement error
SELECT '#1292', ST_AsText(ST_SnapToGrid(ST_GeomFromText(
	'GEOMETRYCOLLECTION(POINT(180 90),POLYGON((140 50,150 50,180 50,140 50),(140 60,150 60,180 60,140 60)))'
	, 4326), 0.00001)::geography)

statement error
SELECT '#1292.1', ST_AsText(ST_GeomFromText('POINT(180.00000000001 95)')::geography),
	ST_AsText(ST_GeomFromText('POINT(185 90.00000000001)')::geography)

query T rowsort
SELECT '<#1320>'
----
<#1320>

statement error
CREATE TABLE A ( geom geometry(MultiPolygon, 4326),
                 geog geography(MultiPolygon, 4326) )

statement error
INSERT INTO a(geog) VALUES('SRID=4326;MULTIPOLYGON (((0 0, 10 0, 10 10, 0 0)))'::geography)

statement error
INSERT INTO a(geom) VALUES('SRID=4326;MULTIPOLYGON (((0 0, 10 0, 10 10, 0 0)))'::geometry)

statement error
SELECT '#1320.geog.1', geometrytype(geog::geometry), st_srid(geog::geometry) FROM a where geog is not null

statement error
SELECT '#1320.geom.1', geometrytype(geom), st_srid(geom) FROM a where geom is not null

statement error
INSERT INTO a(geog) VALUES('SRID=4326;POLYGON ((0 0, 10 0, 10 10, 0 0))'::geography)

statement error
INSERT INTO a(geom) VALUES('SRID=4326;POLYGON ((0 0, 10 0, 10 10, 0 0))'::geometry)

statement error
SELECT '#1320.geog.2', geometrytype(geog::geometry), st_srid(geog::geometry) FROM a where geog is not null

statement error
SELECT '#1320.geom.2', geometrytype(geom), st_srid(geom) FROM a where geom is not null


