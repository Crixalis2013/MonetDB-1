stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1039:bit := language.dataflow();
    X_38:bat[:str] := bat.new(nil:str);
    X_51:bat[:timestamp] := algebra.project(X_38:bat[:str], nil:timestamp);
    X_40:bat[:timestamp] := bat.new(nil:timestamp);
    X_46:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_53:bat[:oid] := algebra.thetaselect(X_46:bat[:bit], true:bit, "==":str);
    X_56:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_53:bat[:oid]);
    X_59:bat[:timestamp] := bat.replace(X_51:bat[:timestamp], C_53:bat[:oid], X_56:bat[:timestamp], true:bit);
    C_60:bat[:oid] := bat.mirror(X_38:bat[:str]);
    C_61:bat[:oid] := algebra.difference(C_60:bat[:oid], C_53:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_65:bat[:oid] := algebra.projection(C_61:bat[:oid], C_60:bat[:oid]);
    X_69:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, C_65:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_72:bat[:oid] := algebra.thetaselect(X_69:bat[:bit], true:bit, "==":str);
    C_74:bat[:oid] := algebra.projection(C_72:bat[:oid], C_65:bat[:oid]);
    X_77:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_74:bat[:oid]);
    X_78:bat[:timestamp] := bat.replace(X_59:bat[:timestamp], C_74:bat[:oid], X_77:bat[:timestamp], true:bit);
    C_79:bat[:oid] := algebra.difference(C_65:bat[:oid], C_74:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_80:bat[:oid] := algebra.projection(C_79:bat[:oid], C_65:bat[:oid]);
    X_85:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, C_80:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_89:bat[:oid] := algebra.thetaselect(X_85:bat[:bit], true:bit, "==":str);
    C_90:bat[:oid] := algebra.projection(C_89:bat[:oid], C_80:bat[:oid]);
    X_93:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_90:bat[:oid]);
    X_96:bat[:timestamp] := bat.replace(X_78:bat[:timestamp], C_90:bat[:oid], X_93:bat[:timestamp], true:bit);
    C_97:bat[:oid] := algebra.difference(C_80:bat[:oid], C_90:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_101:bat[:oid] := algebra.projection(C_97:bat[:oid], C_80:bat[:oid]);
    X_105:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, C_101:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_108:bat[:oid] := algebra.thetaselect(X_105:bat[:bit], true:bit, "==":str);
    C_110:bat[:oid] := algebra.projection(C_108:bat[:oid], C_101:bat[:oid]);
    X_113:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_110:bat[:oid]);
    X_114:bat[:timestamp] := bat.replace(X_96:bat[:timestamp], C_110:bat[:oid], X_113:bat[:timestamp], true:bit);
    C_115:bat[:oid] := algebra.difference(C_101:bat[:oid], C_110:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_116:bat[:oid] := algebra.projection(C_115:bat[:oid], C_101:bat[:oid]);
    X_121:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, C_116:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_125:bat[:oid] := algebra.thetaselect(X_121:bat[:bit], true:bit, "==":str);
    C_126:bat[:oid] := algebra.projection(C_125:bat[:oid], C_116:bat[:oid]);
    X_129:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_126:bat[:oid]);
    X_132:bat[:timestamp] := bat.replace(X_114:bat[:timestamp], C_126:bat[:oid], X_129:bat[:timestamp], true:bit);
    C_133:bat[:oid] := algebra.difference(C_116:bat[:oid], C_126:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_137:bat[:oid] := algebra.projection(C_133:bat[:oid], C_116:bat[:oid]);
    X_141:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, C_137:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_144:bat[:oid] := algebra.thetaselect(X_141:bat[:bit], true:bit, "==":str);
    C_146:bat[:oid] := algebra.projection(C_144:bat[:oid], C_137:bat[:oid]);
    X_149:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_146:bat[:oid]);
    X_150:bat[:timestamp] := bat.replace(X_132:bat[:timestamp], C_146:bat[:oid], X_149:bat[:timestamp], true:bit);
    C_151:bat[:oid] := algebra.difference(C_137:bat[:oid], C_146:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_152:bat[:oid] := algebra.projection(C_151:bat[:oid], C_137:bat[:oid]);
    X_157:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, C_152:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_161:bat[:oid] := algebra.thetaselect(X_157:bat[:bit], true:bit, "==":str);
    C_162:bat[:oid] := algebra.projection(C_161:bat[:oid], C_152:bat[:oid]);
    X_165:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_162:bat[:oid]);
    X_168:bat[:timestamp] := bat.replace(X_150:bat[:timestamp], C_162:bat[:oid], X_165:bat[:timestamp], true:bit);
    C_169:bat[:oid] := algebra.difference(C_152:bat[:oid], C_162:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_173:bat[:oid] := algebra.projection(C_169:bat[:oid], C_152:bat[:oid]);
    X_177:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, C_173:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_180:bat[:oid] := algebra.thetaselect(X_177:bat[:bit], true:bit, "==":str);
    C_182:bat[:oid] := algebra.projection(C_180:bat[:oid], C_173:bat[:oid]);
    X_185:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_182:bat[:oid]);
    X_186:bat[:timestamp] := bat.replace(X_168:bat[:timestamp], C_182:bat[:oid], X_185:bat[:timestamp], true:bit);
    C_187:bat[:oid] := algebra.difference(C_173:bat[:oid], C_182:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_188:bat[:oid] := algebra.projection(C_187:bat[:oid], C_173:bat[:oid]);
    X_193:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, C_188:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_197:bat[:oid] := algebra.thetaselect(X_193:bat[:bit], true:bit, "==":str);
    C_198:bat[:oid] := algebra.projection(C_197:bat[:oid], C_188:bat[:oid]);
    X_201:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_198:bat[:oid]);
    X_204:bat[:timestamp] := bat.replace(X_186:bat[:timestamp], C_198:bat[:oid], X_201:bat[:timestamp], true:bit);
    C_205:bat[:oid] := algebra.difference(C_188:bat[:oid], C_198:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_209:bat[:oid] := algebra.projection(C_205:bat[:oid], C_188:bat[:oid]);
    X_213:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, C_209:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_216:bat[:oid] := algebra.thetaselect(X_213:bat[:bit], true:bit, "==":str);
    C_218:bat[:oid] := algebra.projection(C_216:bat[:oid], C_209:bat[:oid]);
    X_221:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_218:bat[:oid]);
    X_222:bat[:timestamp] := bat.replace(X_204:bat[:timestamp], C_218:bat[:oid], X_221:bat[:timestamp], true:bit);
    C_223:bat[:oid] := algebra.difference(C_209:bat[:oid], C_218:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_224:bat[:oid] := algebra.projection(C_223:bat[:oid], C_209:bat[:oid]);
    X_229:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, C_224:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_233:bat[:oid] := algebra.thetaselect(X_229:bat[:bit], true:bit, "==":str);
    C_234:bat[:oid] := algebra.projection(C_233:bat[:oid], C_224:bat[:oid]);
    X_237:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_234:bat[:oid]);
    X_240:bat[:timestamp] := bat.replace(X_222:bat[:timestamp], C_234:bat[:oid], X_237:bat[:timestamp], true:bit);
    C_241:bat[:oid] := algebra.difference(C_224:bat[:oid], C_234:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_245:bat[:oid] := algebra.projection(C_241:bat[:oid], C_224:bat[:oid]);
    X_249:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, C_245:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_252:bat[:oid] := algebra.thetaselect(X_249:bat[:bit], true:bit, "==":str);
    C_254:bat[:oid] := algebra.projection(C_252:bat[:oid], C_245:bat[:oid]);
    X_257:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_254:bat[:oid]);
    X_258:bat[:timestamp] := bat.replace(X_240:bat[:timestamp], C_254:bat[:oid], X_257:bat[:timestamp], true:bit);
    C_259:bat[:oid] := algebra.difference(C_245:bat[:oid], C_254:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_260:bat[:oid] := algebra.projection(C_259:bat[:oid], C_245:bat[:oid]);
    X_265:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, C_260:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_269:bat[:oid] := algebra.thetaselect(X_265:bat[:bit], true:bit, "==":str);
    C_270:bat[:oid] := algebra.projection(C_269:bat[:oid], C_260:bat[:oid]);
    X_273:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_270:bat[:oid]);
    X_276:bat[:timestamp] := bat.replace(X_258:bat[:timestamp], C_270:bat[:oid], X_273:bat[:timestamp], true:bit);
    C_277:bat[:oid] := algebra.difference(C_260:bat[:oid], C_270:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_281:bat[:oid] := algebra.projection(C_277:bat[:oid], C_260:bat[:oid]);
    X_285:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, C_281:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_288:bat[:oid] := algebra.thetaselect(X_285:bat[:bit], true:bit, "==":str);
    C_290:bat[:oid] := algebra.projection(C_288:bat[:oid], C_281:bat[:oid]);
    X_293:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_290:bat[:oid]);
    X_294:bat[:timestamp] := bat.replace(X_276:bat[:timestamp], C_290:bat[:oid], X_293:bat[:timestamp], true:bit);
    C_295:bat[:oid] := algebra.difference(C_281:bat[:oid], C_290:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_296:bat[:oid] := algebra.projection(C_295:bat[:oid], C_281:bat[:oid]);
    X_301:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, C_296:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_305:bat[:oid] := algebra.thetaselect(X_301:bat[:bit], true:bit, "==":str);
    C_306:bat[:oid] := algebra.projection(C_305:bat[:oid], C_296:bat[:oid]);
    X_309:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_306:bat[:oid]);
    X_312:bat[:timestamp] := bat.replace(X_294:bat[:timestamp], C_306:bat[:oid], X_309:bat[:timestamp], true:bit);
    C_313:bat[:oid] := algebra.difference(C_296:bat[:oid], C_306:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_317:bat[:oid] := algebra.projection(C_313:bat[:oid], C_296:bat[:oid]);
    X_321:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, C_317:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_324:bat[:oid] := algebra.thetaselect(X_321:bat[:bit], true:bit, "==":str);
    C_326:bat[:oid] := algebra.projection(C_324:bat[:oid], C_317:bat[:oid]);
    X_329:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_326:bat[:oid]);
    X_330:bat[:timestamp] := bat.replace(X_312:bat[:timestamp], C_326:bat[:oid], X_329:bat[:timestamp], true:bit);
    C_331:bat[:oid] := algebra.difference(C_317:bat[:oid], C_326:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_332:bat[:oid] := algebra.projection(C_331:bat[:oid], C_317:bat[:oid]);
    X_337:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, C_332:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_341:bat[:oid] := algebra.thetaselect(X_337:bat[:bit], true:bit, "==":str);
    C_342:bat[:oid] := algebra.projection(C_341:bat[:oid], C_332:bat[:oid]);
    X_345:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_342:bat[:oid]);
    X_348:bat[:timestamp] := bat.replace(X_330:bat[:timestamp], C_342:bat[:oid], X_345:bat[:timestamp], true:bit);
    C_349:bat[:oid] := algebra.difference(C_332:bat[:oid], C_342:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_353:bat[:oid] := algebra.projection(C_349:bat[:oid], C_332:bat[:oid]);
    X_357:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, C_353:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_360:bat[:oid] := algebra.thetaselect(X_357:bat[:bit], true:bit, "==":str);
    C_362:bat[:oid] := algebra.projection(C_360:bat[:oid], C_353:bat[:oid]);
    X_365:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_362:bat[:oid]);
    X_366:bat[:timestamp] := bat.replace(X_348:bat[:timestamp], C_362:bat[:oid], X_365:bat[:timestamp], true:bit);
    C_367:bat[:oid] := algebra.difference(C_353:bat[:oid], C_362:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_368:bat[:oid] := algebra.projection(C_367:bat[:oid], C_353:bat[:oid]);
    X_373:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, C_368:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_377:bat[:oid] := algebra.thetaselect(X_373:bat[:bit], true:bit, "==":str);
    C_378:bat[:oid] := algebra.projection(C_377:bat[:oid], C_368:bat[:oid]);
    X_381:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_378:bat[:oid]);
    X_384:bat[:timestamp] := bat.replace(X_366:bat[:timestamp], C_378:bat[:oid], X_381:bat[:timestamp], true:bit);
    C_385:bat[:oid] := algebra.difference(C_368:bat[:oid], C_378:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_389:bat[:oid] := algebra.projection(C_385:bat[:oid], C_368:bat[:oid]);
    X_393:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, C_389:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_396:bat[:oid] := algebra.thetaselect(X_393:bat[:bit], true:bit, "==":str);
    C_398:bat[:oid] := algebra.projection(C_396:bat[:oid], C_389:bat[:oid]);
    X_401:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_398:bat[:oid]);
    X_402:bat[:timestamp] := bat.replace(X_384:bat[:timestamp], C_398:bat[:oid], X_401:bat[:timestamp], true:bit);
    C_403:bat[:oid] := algebra.difference(C_389:bat[:oid], C_398:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_404:bat[:oid] := algebra.projection(C_403:bat[:oid], C_389:bat[:oid]);
    X_409:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, C_404:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_413:bat[:oid] := algebra.thetaselect(X_409:bat[:bit], true:bit, "==":str);
    C_414:bat[:oid] := algebra.projection(C_413:bat[:oid], C_404:bat[:oid]);
    X_417:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_414:bat[:oid]);
    X_420:bat[:timestamp] := bat.replace(X_402:bat[:timestamp], C_414:bat[:oid], X_417:bat[:timestamp], true:bit);
    C_421:bat[:oid] := algebra.difference(C_404:bat[:oid], C_414:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_425:bat[:oid] := algebra.projection(C_421:bat[:oid], C_404:bat[:oid]);
    X_429:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, C_425:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_432:bat[:oid] := algebra.thetaselect(X_429:bat[:bit], true:bit, "==":str);
    C_434:bat[:oid] := algebra.projection(C_432:bat[:oid], C_425:bat[:oid]);
    X_437:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_434:bat[:oid]);
    X_438:bat[:timestamp] := bat.replace(X_420:bat[:timestamp], C_434:bat[:oid], X_437:bat[:timestamp], true:bit);
    C_439:bat[:oid] := algebra.difference(C_425:bat[:oid], C_434:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_440:bat[:oid] := algebra.projection(C_439:bat[:oid], C_425:bat[:oid]);
    X_445:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, C_440:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_449:bat[:oid] := algebra.thetaselect(X_445:bat[:bit], true:bit, "==":str);
    C_450:bat[:oid] := algebra.projection(C_449:bat[:oid], C_440:bat[:oid]);
    X_453:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_450:bat[:oid]);
    X_456:bat[:timestamp] := bat.replace(X_438:bat[:timestamp], C_450:bat[:oid], X_453:bat[:timestamp], true:bit);
    C_457:bat[:oid] := algebra.difference(C_440:bat[:oid], C_450:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_461:bat[:oid] := algebra.projection(C_457:bat[:oid], C_440:bat[:oid]);
    X_465:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, C_461:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_468:bat[:oid] := algebra.thetaselect(X_465:bat[:bit], true:bit, "==":str);
    C_470:bat[:oid] := algebra.projection(C_468:bat[:oid], C_461:bat[:oid]);
    X_473:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_470:bat[:oid]);
    X_474:bat[:timestamp] := bat.replace(X_456:bat[:timestamp], C_470:bat[:oid], X_473:bat[:timestamp], true:bit);
    C_475:bat[:oid] := algebra.difference(C_461:bat[:oid], C_470:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_476:bat[:oid] := algebra.projection(C_475:bat[:oid], C_461:bat[:oid]);
    X_481:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, C_476:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_485:bat[:oid] := algebra.thetaselect(X_481:bat[:bit], true:bit, "==":str);
    C_486:bat[:oid] := algebra.projection(C_485:bat[:oid], C_476:bat[:oid]);
    X_489:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_486:bat[:oid]);
    X_492:bat[:timestamp] := bat.replace(X_474:bat[:timestamp], C_486:bat[:oid], X_489:bat[:timestamp], true:bit);
    C_493:bat[:oid] := algebra.difference(C_476:bat[:oid], C_486:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_497:bat[:oid] := algebra.projection(C_493:bat[:oid], C_476:bat[:oid]);
    X_501:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, C_497:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_504:bat[:oid] := algebra.thetaselect(X_501:bat[:bit], true:bit, "==":str);
    C_506:bat[:oid] := algebra.projection(C_504:bat[:oid], C_497:bat[:oid]);
    X_509:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_506:bat[:oid]);
    X_510:bat[:timestamp] := bat.replace(X_492:bat[:timestamp], C_506:bat[:oid], X_509:bat[:timestamp], true:bit);
    C_511:bat[:oid] := algebra.difference(C_497:bat[:oid], C_506:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_512:bat[:oid] := algebra.projection(C_511:bat[:oid], C_497:bat[:oid]);
    X_517:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, C_512:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_521:bat[:oid] := algebra.thetaselect(X_517:bat[:bit], true:bit, "==":str);
    C_522:bat[:oid] := algebra.projection(C_521:bat[:oid], C_512:bat[:oid]);
    X_525:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_522:bat[:oid]);
    X_528:bat[:timestamp] := bat.replace(X_510:bat[:timestamp], C_522:bat[:oid], X_525:bat[:timestamp], true:bit);
    C_529:bat[:oid] := algebra.difference(C_512:bat[:oid], C_522:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_533:bat[:oid] := algebra.projection(C_529:bat[:oid], C_512:bat[:oid]);
    X_537:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, C_533:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_540:bat[:oid] := algebra.thetaselect(X_537:bat[:bit], true:bit, "==":str);
    C_542:bat[:oid] := algebra.projection(C_540:bat[:oid], C_533:bat[:oid]);
    X_545:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_542:bat[:oid]);
    X_546:bat[:timestamp] := bat.replace(X_528:bat[:timestamp], C_542:bat[:oid], X_545:bat[:timestamp], true:bit);
    C_547:bat[:oid] := algebra.difference(C_533:bat[:oid], C_542:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_548:bat[:oid] := algebra.projection(C_547:bat[:oid], C_533:bat[:oid]);
    X_553:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, C_548:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_557:bat[:oid] := algebra.thetaselect(X_553:bat[:bit], true:bit, "==":str);
    C_558:bat[:oid] := algebra.projection(C_557:bat[:oid], C_548:bat[:oid]);
    X_561:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_558:bat[:oid]);
    X_564:bat[:timestamp] := bat.replace(X_546:bat[:timestamp], C_558:bat[:oid], X_561:bat[:timestamp], true:bit);
    C_565:bat[:oid] := algebra.difference(C_548:bat[:oid], C_558:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_569:bat[:oid] := algebra.projection(C_565:bat[:oid], C_548:bat[:oid]);
    X_573:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, C_569:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_576:bat[:oid] := algebra.thetaselect(X_573:bat[:bit], true:bit, "==":str);
    C_578:bat[:oid] := algebra.projection(C_576:bat[:oid], C_569:bat[:oid]);
    X_581:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_578:bat[:oid]);
    X_582:bat[:timestamp] := bat.replace(X_564:bat[:timestamp], C_578:bat[:oid], X_581:bat[:timestamp], true:bit);
    C_583:bat[:oid] := algebra.difference(C_569:bat[:oid], C_578:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_584:bat[:oid] := algebra.projection(C_583:bat[:oid], C_569:bat[:oid]);
    X_589:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, C_584:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_593:bat[:oid] := algebra.thetaselect(X_589:bat[:bit], true:bit, "==":str);
    C_594:bat[:oid] := algebra.projection(C_593:bat[:oid], C_584:bat[:oid]);
    X_597:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_594:bat[:oid]);
    X_600:bat[:timestamp] := bat.replace(X_582:bat[:timestamp], C_594:bat[:oid], X_597:bat[:timestamp], true:bit);
    C_601:bat[:oid] := algebra.difference(C_584:bat[:oid], C_594:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_605:bat[:oid] := algebra.projection(C_601:bat[:oid], C_584:bat[:oid]);
    X_609:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, C_605:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_612:bat[:oid] := algebra.thetaselect(X_609:bat[:bit], true:bit, "==":str);
    C_614:bat[:oid] := algebra.projection(C_612:bat[:oid], C_605:bat[:oid]);
    X_617:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_614:bat[:oid]);
    X_618:bat[:timestamp] := bat.replace(X_600:bat[:timestamp], C_614:bat[:oid], X_617:bat[:timestamp], true:bit);
    C_619:bat[:oid] := algebra.difference(C_605:bat[:oid], C_614:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_620:bat[:oid] := algebra.projection(C_619:bat[:oid], C_605:bat[:oid]);
    X_625:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, C_620:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_629:bat[:oid] := algebra.thetaselect(X_625:bat[:bit], true:bit, "==":str);
    C_630:bat[:oid] := algebra.projection(C_629:bat[:oid], C_620:bat[:oid]);
    X_633:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_630:bat[:oid]);
    X_636:bat[:timestamp] := bat.replace(X_618:bat[:timestamp], C_630:bat[:oid], X_633:bat[:timestamp], true:bit);
    C_637:bat[:oid] := algebra.difference(C_620:bat[:oid], C_630:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_641:bat[:oid] := algebra.projection(C_637:bat[:oid], C_620:bat[:oid]);
    X_645:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, C_641:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_648:bat[:oid] := algebra.thetaselect(X_645:bat[:bit], true:bit, "==":str);
    C_650:bat[:oid] := algebra.projection(C_648:bat[:oid], C_641:bat[:oid]);
    X_653:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_650:bat[:oid]);
    X_654:bat[:timestamp] := bat.replace(X_636:bat[:timestamp], C_650:bat[:oid], X_653:bat[:timestamp], true:bit);
    C_655:bat[:oid] := algebra.difference(C_641:bat[:oid], C_650:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_656:bat[:oid] := algebra.projection(C_655:bat[:oid], C_641:bat[:oid]);
    X_661:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, C_656:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_665:bat[:oid] := algebra.thetaselect(X_661:bat[:bit], true:bit, "==":str);
    C_666:bat[:oid] := algebra.projection(C_665:bat[:oid], C_656:bat[:oid]);
    X_669:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_666:bat[:oid]);
    X_672:bat[:timestamp] := bat.replace(X_654:bat[:timestamp], C_666:bat[:oid], X_669:bat[:timestamp], true:bit);
    C_673:bat[:oid] := algebra.difference(C_656:bat[:oid], C_666:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_677:bat[:oid] := algebra.projection(C_673:bat[:oid], C_656:bat[:oid]);
    X_681:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, C_677:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_684:bat[:oid] := algebra.thetaselect(X_681:bat[:bit], true:bit, "==":str);
    C_686:bat[:oid] := algebra.projection(C_684:bat[:oid], C_677:bat[:oid]);
    X_689:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_686:bat[:oid]);
    X_690:bat[:timestamp] := bat.replace(X_672:bat[:timestamp], C_686:bat[:oid], X_689:bat[:timestamp], true:bit);
    C_691:bat[:oid] := algebra.difference(C_677:bat[:oid], C_686:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_692:bat[:oid] := algebra.projection(C_691:bat[:oid], C_677:bat[:oid]);
    X_697:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, C_692:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_701:bat[:oid] := algebra.thetaselect(X_697:bat[:bit], true:bit, "==":str);
    C_702:bat[:oid] := algebra.projection(C_701:bat[:oid], C_692:bat[:oid]);
    X_705:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_702:bat[:oid]);
    X_708:bat[:timestamp] := bat.replace(X_690:bat[:timestamp], C_702:bat[:oid], X_705:bat[:timestamp], true:bit);
    C_709:bat[:oid] := algebra.difference(C_692:bat[:oid], C_702:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_713:bat[:oid] := algebra.projection(C_709:bat[:oid], C_692:bat[:oid]);
    X_717:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, C_713:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_720:bat[:oid] := algebra.thetaselect(X_717:bat[:bit], true:bit, "==":str);
    C_722:bat[:oid] := algebra.projection(C_720:bat[:oid], C_713:bat[:oid]);
    X_725:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_722:bat[:oid]);
    X_726:bat[:timestamp] := bat.replace(X_708:bat[:timestamp], C_722:bat[:oid], X_725:bat[:timestamp], true:bit);
    C_727:bat[:oid] := algebra.difference(C_713:bat[:oid], C_722:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_728:bat[:oid] := algebra.projection(C_727:bat[:oid], C_713:bat[:oid]);
    X_733:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, C_728:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_737:bat[:oid] := algebra.thetaselect(X_733:bat[:bit], true:bit, "==":str);
    C_738:bat[:oid] := algebra.projection(C_737:bat[:oid], C_728:bat[:oid]);
    X_741:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_738:bat[:oid]);
    X_744:bat[:timestamp] := bat.replace(X_726:bat[:timestamp], C_738:bat[:oid], X_741:bat[:timestamp], true:bit);
    C_745:bat[:oid] := algebra.difference(C_728:bat[:oid], C_738:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_749:bat[:oid] := algebra.projection(C_745:bat[:oid], C_728:bat[:oid]);
    X_753:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, C_749:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_756:bat[:oid] := algebra.thetaselect(X_753:bat[:bit], true:bit, "==":str);
    C_758:bat[:oid] := algebra.projection(C_756:bat[:oid], C_749:bat[:oid]);
    X_761:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_758:bat[:oid]);
    X_762:bat[:timestamp] := bat.replace(X_744:bat[:timestamp], C_758:bat[:oid], X_761:bat[:timestamp], true:bit);
    C_763:bat[:oid] := algebra.difference(C_749:bat[:oid], C_758:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_764:bat[:oid] := algebra.projection(C_763:bat[:oid], C_749:bat[:oid]);
    X_769:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, C_764:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_773:bat[:oid] := algebra.thetaselect(X_769:bat[:bit], true:bit, "==":str);
    C_774:bat[:oid] := algebra.projection(C_773:bat[:oid], C_764:bat[:oid]);
    X_777:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_774:bat[:oid]);
    X_780:bat[:timestamp] := bat.replace(X_762:bat[:timestamp], C_774:bat[:oid], X_777:bat[:timestamp], true:bit);
    C_781:bat[:oid] := algebra.difference(C_764:bat[:oid], C_774:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_785:bat[:oid] := algebra.projection(C_781:bat[:oid], C_764:bat[:oid]);
    X_789:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, C_785:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_792:bat[:oid] := algebra.thetaselect(X_789:bat[:bit], true:bit, "==":str);
    C_794:bat[:oid] := algebra.projection(C_792:bat[:oid], C_785:bat[:oid]);
    X_797:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_794:bat[:oid]);
    X_798:bat[:timestamp] := bat.replace(X_780:bat[:timestamp], C_794:bat[:oid], X_797:bat[:timestamp], true:bit);
    C_799:bat[:oid] := algebra.difference(C_785:bat[:oid], C_794:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_800:bat[:oid] := algebra.projection(C_799:bat[:oid], C_785:bat[:oid]);
    X_805:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, C_800:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_809:bat[:oid] := algebra.thetaselect(X_805:bat[:bit], true:bit, "==":str);
    C_810:bat[:oid] := algebra.projection(C_809:bat[:oid], C_800:bat[:oid]);
    X_813:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_810:bat[:oid]);
    X_816:bat[:timestamp] := bat.replace(X_798:bat[:timestamp], C_810:bat[:oid], X_813:bat[:timestamp], true:bit);
    C_817:bat[:oid] := algebra.difference(C_800:bat[:oid], C_810:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_821:bat[:oid] := algebra.projection(C_817:bat[:oid], C_800:bat[:oid]);
    X_825:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, C_821:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_828:bat[:oid] := algebra.thetaselect(X_825:bat[:bit], true:bit, "==":str);
    C_830:bat[:oid] := algebra.projection(C_828:bat[:oid], C_821:bat[:oid]);
    X_833:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_830:bat[:oid]);
    X_834:bat[:timestamp] := bat.replace(X_816:bat[:timestamp], C_830:bat[:oid], X_833:bat[:timestamp], true:bit);
    C_835:bat[:oid] := algebra.difference(C_821:bat[:oid], C_830:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_836:bat[:oid] := algebra.projection(C_835:bat[:oid], C_821:bat[:oid]);
    X_841:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, C_836:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_845:bat[:oid] := algebra.thetaselect(X_841:bat[:bit], true:bit, "==":str);
    C_846:bat[:oid] := algebra.projection(C_845:bat[:oid], C_836:bat[:oid]);
    X_849:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_846:bat[:oid]);
    X_852:bat[:timestamp] := bat.replace(X_834:bat[:timestamp], C_846:bat[:oid], X_849:bat[:timestamp], true:bit);
    C_853:bat[:oid] := algebra.difference(C_836:bat[:oid], C_846:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_857:bat[:oid] := algebra.projection(C_853:bat[:oid], C_836:bat[:oid]);
    X_861:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, C_857:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_864:bat[:oid] := algebra.thetaselect(X_861:bat[:bit], true:bit, "==":str);
    C_866:bat[:oid] := algebra.projection(C_864:bat[:oid], C_857:bat[:oid]);
    X_869:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng, C_866:bat[:oid]);
    X_870:bat[:timestamp] := bat.replace(X_852:bat[:timestamp], C_866:bat[:oid], X_869:bat[:timestamp], true:bit);
    C_871:bat[:oid] := algebra.difference(C_857:bat[:oid], C_866:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_872:bat[:oid] := algebra.projection(C_871:bat[:oid], C_857:bat[:oid]);
    X_874:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng, C_872:bat[:oid]);
    X_875:bat[:timestamp] := bat.replace(X_870:bat[:timestamp], C_872:bat[:oid], X_874:bat[:timestamp], true:bit);
    X_883:bat[:str] := bat.pack(".":str);
    X_884:bat[:str] := bat.pack("yearref":str);
    X_885:bat[:str] := bat.pack("clob":str);
    X_886:bat[:int] := bat.pack(0:int);
    X_876:bat[:timestamp] := batcalc.timestamp(X_875:bat[:timestamp], nil:BAT, 7:int);
    X_880:bat[:str] := batmtime.timestamp_to_str(X_876:bat[:timestamp], "%Y":str, nil:BAT);
    language.pass(X_38:bat[:str]);
    language.pass(C_53:bat[:oid]);
    language.pass(C_60:bat[:oid]);
    language.pass(C_74:bat[:oid]);
    language.pass(C_65:bat[:oid]);
    language.pass(C_90:bat[:oid]);
    language.pass(C_80:bat[:oid]);
    language.pass(C_110:bat[:oid]);
    language.pass(C_101:bat[:oid]);
    language.pass(C_126:bat[:oid]);
    language.pass(C_116:bat[:oid]);
    language.pass(C_146:bat[:oid]);
    language.pass(C_137:bat[:oid]);
    language.pass(C_162:bat[:oid]);
    language.pass(C_152:bat[:oid]);
    language.pass(C_182:bat[:oid]);
    language.pass(C_173:bat[:oid]);
    language.pass(C_198:bat[:oid]);
    language.pass(C_188:bat[:oid]);
    language.pass(C_218:bat[:oid]);
    language.pass(C_209:bat[:oid]);
    language.pass(C_234:bat[:oid]);
    language.pass(C_224:bat[:oid]);
    language.pass(C_254:bat[:oid]);
    language.pass(C_245:bat[:oid]);
    language.pass(C_270:bat[:oid]);
    language.pass(C_260:bat[:oid]);
    language.pass(C_290:bat[:oid]);
    language.pass(C_281:bat[:oid]);
    language.pass(C_306:bat[:oid]);
    language.pass(C_296:bat[:oid]);
    language.pass(C_326:bat[:oid]);
    language.pass(C_317:bat[:oid]);
    language.pass(C_342:bat[:oid]);
    language.pass(C_332:bat[:oid]);
    language.pass(C_362:bat[:oid]);
    language.pass(C_353:bat[:oid]);
    language.pass(C_378:bat[:oid]);
    language.pass(C_368:bat[:oid]);
    language.pass(C_398:bat[:oid]);
    language.pass(C_389:bat[:oid]);
    language.pass(C_414:bat[:oid]);
    language.pass(C_404:bat[:oid]);
    language.pass(C_434:bat[:oid]);
    language.pass(C_425:bat[:oid]);
    language.pass(C_450:bat[:oid]);
    language.pass(C_440:bat[:oid]);
    language.pass(C_470:bat[:oid]);
    language.pass(C_461:bat[:oid]);
    language.pass(C_486:bat[:oid]);
    language.pass(C_476:bat[:oid]);
    language.pass(C_506:bat[:oid]);
    language.pass(C_497:bat[:oid]);
    language.pass(C_522:bat[:oid]);
    language.pass(C_512:bat[:oid]);
    language.pass(C_542:bat[:oid]);
    language.pass(C_533:bat[:oid]);
    language.pass(C_558:bat[:oid]);
    language.pass(C_548:bat[:oid]);
    language.pass(C_578:bat[:oid]);
    language.pass(C_569:bat[:oid]);
    language.pass(C_594:bat[:oid]);
    language.pass(C_584:bat[:oid]);
    language.pass(C_614:bat[:oid]);
    language.pass(C_605:bat[:oid]);
    language.pass(C_630:bat[:oid]);
    language.pass(C_620:bat[:oid]);
    language.pass(C_650:bat[:oid]);
    language.pass(C_641:bat[:oid]);
    language.pass(C_666:bat[:oid]);
    language.pass(C_656:bat[:oid]);
    language.pass(C_686:bat[:oid]);
    language.pass(C_677:bat[:oid]);
    language.pass(C_702:bat[:oid]);
    language.pass(C_692:bat[:oid]);
    language.pass(C_722:bat[:oid]);
    language.pass(C_713:bat[:oid]);
    language.pass(C_738:bat[:oid]);
    language.pass(C_728:bat[:oid]);
    language.pass(C_758:bat[:oid]);
    language.pass(C_749:bat[:oid]);
    language.pass(C_774:bat[:oid]);
    language.pass(C_764:bat[:oid]);
    language.pass(C_794:bat[:oid]);
    language.pass(C_785:bat[:oid]);
    language.pass(C_810:bat[:oid]);
    language.pass(C_800:bat[:oid]);
    language.pass(C_830:bat[:oid]);
    language.pass(C_821:bat[:oid]);
    language.pass(C_846:bat[:oid]);
    language.pass(C_836:bat[:oid]);
    language.pass(C_866:bat[:oid]);
    language.pass(C_857:bat[:oid]);
    language.pass(X_40:bat[:timestamp]);
    language.pass(C_872:bat[:oid]);
exit X_1039:bit;
    sql.resultSet(X_883:bat[:str], X_884:bat[:str], X_885:bat[:str], X_886:bat[:int], X_886:bat[:int], X_880:bat[:str]);
end user.main;
# optimizer.mitosis()
#inline               actions= 0 time=37 usec 
#remap                actions=322 time=444 usec 
#costmodel            actions= 1 time=8 usec 
#coercion             actions= 0 time=9 usec 
#aliases              actions=142 time=54 usec 
#evaluate             actions=92 time=244 usec 
#emptybind            actions= 9 time=45 usec 
#pushselect           actions= 0 time=40 usec 
#aliases              actions=96 time=74 usec 
#mergetable           actions= 0 time=379 usec 
#deadcode             actions=241 time=60 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

