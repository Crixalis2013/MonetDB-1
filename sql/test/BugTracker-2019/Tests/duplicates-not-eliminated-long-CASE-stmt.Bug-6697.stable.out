stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1044:bit := language.dataflow();
    X_43:bat[:str] := bat.new(nil:str);
    X_56:bat[:timestamp] := algebra.project(X_43:bat[:str], nil:timestamp);
    X_45:bat[:timestamp] := bat.new(nil:timestamp);
    X_51:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_58:bat[:oid] := algebra.thetaselect(X_51:bat[:bit], true:bit, "==":str);
    X_61:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_58:bat[:oid]);
    X_64:bat[:timestamp] := bat.replace(X_56:bat[:timestamp], C_58:bat[:oid], X_61:bat[:timestamp], true:bit);
    C_65:bat[:oid] := bat.mirror(X_43:bat[:str]);
    C_66:bat[:oid] := algebra.difference(C_65:bat[:oid], C_58:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_70:bat[:oid] := algebra.projection(C_66:bat[:oid], C_65:bat[:oid]);
    X_74:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, C_70:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_77:bat[:oid] := algebra.thetaselect(X_74:bat[:bit], true:bit, "==":str);
    C_79:bat[:oid] := algebra.projection(C_77:bat[:oid], C_70:bat[:oid]);
    X_82:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_79:bat[:oid]);
    X_83:bat[:timestamp] := bat.replace(X_64:bat[:timestamp], C_79:bat[:oid], X_82:bat[:timestamp], true:bit);
    C_84:bat[:oid] := algebra.difference(C_70:bat[:oid], C_79:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_85:bat[:oid] := algebra.projection(C_84:bat[:oid], C_70:bat[:oid]);
    X_90:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, C_85:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_94:bat[:oid] := algebra.thetaselect(X_90:bat[:bit], true:bit, "==":str);
    C_95:bat[:oid] := algebra.projection(C_94:bat[:oid], C_85:bat[:oid]);
    X_98:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_95:bat[:oid]);
    X_101:bat[:timestamp] := bat.replace(X_83:bat[:timestamp], C_95:bat[:oid], X_98:bat[:timestamp], true:bit);
    C_102:bat[:oid] := algebra.difference(C_85:bat[:oid], C_95:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_106:bat[:oid] := algebra.projection(C_102:bat[:oid], C_85:bat[:oid]);
    X_110:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, C_106:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_113:bat[:oid] := algebra.thetaselect(X_110:bat[:bit], true:bit, "==":str);
    C_115:bat[:oid] := algebra.projection(C_113:bat[:oid], C_106:bat[:oid]);
    X_118:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_115:bat[:oid]);
    X_119:bat[:timestamp] := bat.replace(X_101:bat[:timestamp], C_115:bat[:oid], X_118:bat[:timestamp], true:bit);
    C_120:bat[:oid] := algebra.difference(C_106:bat[:oid], C_115:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_121:bat[:oid] := algebra.projection(C_120:bat[:oid], C_106:bat[:oid]);
    X_126:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, C_121:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_130:bat[:oid] := algebra.thetaselect(X_126:bat[:bit], true:bit, "==":str);
    C_131:bat[:oid] := algebra.projection(C_130:bat[:oid], C_121:bat[:oid]);
    X_134:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_131:bat[:oid]);
    X_137:bat[:timestamp] := bat.replace(X_119:bat[:timestamp], C_131:bat[:oid], X_134:bat[:timestamp], true:bit);
    C_138:bat[:oid] := algebra.difference(C_121:bat[:oid], C_131:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_142:bat[:oid] := algebra.projection(C_138:bat[:oid], C_121:bat[:oid]);
    X_146:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, C_142:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_149:bat[:oid] := algebra.thetaselect(X_146:bat[:bit], true:bit, "==":str);
    C_151:bat[:oid] := algebra.projection(C_149:bat[:oid], C_142:bat[:oid]);
    X_154:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_151:bat[:oid]);
    X_155:bat[:timestamp] := bat.replace(X_137:bat[:timestamp], C_151:bat[:oid], X_154:bat[:timestamp], true:bit);
    C_156:bat[:oid] := algebra.difference(C_142:bat[:oid], C_151:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_157:bat[:oid] := algebra.projection(C_156:bat[:oid], C_142:bat[:oid]);
    X_162:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, C_157:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_166:bat[:oid] := algebra.thetaselect(X_162:bat[:bit], true:bit, "==":str);
    C_167:bat[:oid] := algebra.projection(C_166:bat[:oid], C_157:bat[:oid]);
    X_170:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_167:bat[:oid]);
    X_173:bat[:timestamp] := bat.replace(X_155:bat[:timestamp], C_167:bat[:oid], X_170:bat[:timestamp], true:bit);
    C_174:bat[:oid] := algebra.difference(C_157:bat[:oid], C_167:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_178:bat[:oid] := algebra.projection(C_174:bat[:oid], C_157:bat[:oid]);
    X_182:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, C_178:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_185:bat[:oid] := algebra.thetaselect(X_182:bat[:bit], true:bit, "==":str);
    C_187:bat[:oid] := algebra.projection(C_185:bat[:oid], C_178:bat[:oid]);
    X_190:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_187:bat[:oid]);
    X_191:bat[:timestamp] := bat.replace(X_173:bat[:timestamp], C_187:bat[:oid], X_190:bat[:timestamp], true:bit);
    C_192:bat[:oid] := algebra.difference(C_178:bat[:oid], C_187:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_193:bat[:oid] := algebra.projection(C_192:bat[:oid], C_178:bat[:oid]);
    X_198:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, C_193:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_202:bat[:oid] := algebra.thetaselect(X_198:bat[:bit], true:bit, "==":str);
    C_203:bat[:oid] := algebra.projection(C_202:bat[:oid], C_193:bat[:oid]);
    X_206:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_203:bat[:oid]);
    X_209:bat[:timestamp] := bat.replace(X_191:bat[:timestamp], C_203:bat[:oid], X_206:bat[:timestamp], true:bit);
    C_210:bat[:oid] := algebra.difference(C_193:bat[:oid], C_203:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_214:bat[:oid] := algebra.projection(C_210:bat[:oid], C_193:bat[:oid]);
    X_218:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, C_214:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_221:bat[:oid] := algebra.thetaselect(X_218:bat[:bit], true:bit, "==":str);
    C_223:bat[:oid] := algebra.projection(C_221:bat[:oid], C_214:bat[:oid]);
    X_226:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_223:bat[:oid]);
    X_227:bat[:timestamp] := bat.replace(X_209:bat[:timestamp], C_223:bat[:oid], X_226:bat[:timestamp], true:bit);
    C_228:bat[:oid] := algebra.difference(C_214:bat[:oid], C_223:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_229:bat[:oid] := algebra.projection(C_228:bat[:oid], C_214:bat[:oid]);
    X_234:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, C_229:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_238:bat[:oid] := algebra.thetaselect(X_234:bat[:bit], true:bit, "==":str);
    C_239:bat[:oid] := algebra.projection(C_238:bat[:oid], C_229:bat[:oid]);
    X_242:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_239:bat[:oid]);
    X_245:bat[:timestamp] := bat.replace(X_227:bat[:timestamp], C_239:bat[:oid], X_242:bat[:timestamp], true:bit);
    C_246:bat[:oid] := algebra.difference(C_229:bat[:oid], C_239:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_250:bat[:oid] := algebra.projection(C_246:bat[:oid], C_229:bat[:oid]);
    X_254:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, C_250:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_257:bat[:oid] := algebra.thetaselect(X_254:bat[:bit], true:bit, "==":str);
    C_259:bat[:oid] := algebra.projection(C_257:bat[:oid], C_250:bat[:oid]);
    X_262:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_259:bat[:oid]);
    X_263:bat[:timestamp] := bat.replace(X_245:bat[:timestamp], C_259:bat[:oid], X_262:bat[:timestamp], true:bit);
    C_264:bat[:oid] := algebra.difference(C_250:bat[:oid], C_259:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_265:bat[:oid] := algebra.projection(C_264:bat[:oid], C_250:bat[:oid]);
    X_270:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, C_265:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_274:bat[:oid] := algebra.thetaselect(X_270:bat[:bit], true:bit, "==":str);
    C_275:bat[:oid] := algebra.projection(C_274:bat[:oid], C_265:bat[:oid]);
    X_278:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_275:bat[:oid]);
    X_281:bat[:timestamp] := bat.replace(X_263:bat[:timestamp], C_275:bat[:oid], X_278:bat[:timestamp], true:bit);
    C_282:bat[:oid] := algebra.difference(C_265:bat[:oid], C_275:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_286:bat[:oid] := algebra.projection(C_282:bat[:oid], C_265:bat[:oid]);
    X_290:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, C_286:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_293:bat[:oid] := algebra.thetaselect(X_290:bat[:bit], true:bit, "==":str);
    C_295:bat[:oid] := algebra.projection(C_293:bat[:oid], C_286:bat[:oid]);
    X_298:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_295:bat[:oid]);
    X_299:bat[:timestamp] := bat.replace(X_281:bat[:timestamp], C_295:bat[:oid], X_298:bat[:timestamp], true:bit);
    C_300:bat[:oid] := algebra.difference(C_286:bat[:oid], C_295:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_301:bat[:oid] := algebra.projection(C_300:bat[:oid], C_286:bat[:oid]);
    X_306:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, C_301:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_310:bat[:oid] := algebra.thetaselect(X_306:bat[:bit], true:bit, "==":str);
    C_311:bat[:oid] := algebra.projection(C_310:bat[:oid], C_301:bat[:oid]);
    X_314:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_311:bat[:oid]);
    X_317:bat[:timestamp] := bat.replace(X_299:bat[:timestamp], C_311:bat[:oid], X_314:bat[:timestamp], true:bit);
    C_318:bat[:oid] := algebra.difference(C_301:bat[:oid], C_311:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_322:bat[:oid] := algebra.projection(C_318:bat[:oid], C_301:bat[:oid]);
    X_326:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, C_322:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_329:bat[:oid] := algebra.thetaselect(X_326:bat[:bit], true:bit, "==":str);
    C_331:bat[:oid] := algebra.projection(C_329:bat[:oid], C_322:bat[:oid]);
    X_334:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_331:bat[:oid]);
    X_335:bat[:timestamp] := bat.replace(X_317:bat[:timestamp], C_331:bat[:oid], X_334:bat[:timestamp], true:bit);
    C_336:bat[:oid] := algebra.difference(C_322:bat[:oid], C_331:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_337:bat[:oid] := algebra.projection(C_336:bat[:oid], C_322:bat[:oid]);
    X_342:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, C_337:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_346:bat[:oid] := algebra.thetaselect(X_342:bat[:bit], true:bit, "==":str);
    C_347:bat[:oid] := algebra.projection(C_346:bat[:oid], C_337:bat[:oid]);
    X_350:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_347:bat[:oid]);
    X_353:bat[:timestamp] := bat.replace(X_335:bat[:timestamp], C_347:bat[:oid], X_350:bat[:timestamp], true:bit);
    C_354:bat[:oid] := algebra.difference(C_337:bat[:oid], C_347:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_358:bat[:oid] := algebra.projection(C_354:bat[:oid], C_337:bat[:oid]);
    X_362:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, C_358:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_365:bat[:oid] := algebra.thetaselect(X_362:bat[:bit], true:bit, "==":str);
    C_367:bat[:oid] := algebra.projection(C_365:bat[:oid], C_358:bat[:oid]);
    X_370:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_367:bat[:oid]);
    X_371:bat[:timestamp] := bat.replace(X_353:bat[:timestamp], C_367:bat[:oid], X_370:bat[:timestamp], true:bit);
    C_372:bat[:oid] := algebra.difference(C_358:bat[:oid], C_367:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_373:bat[:oid] := algebra.projection(C_372:bat[:oid], C_358:bat[:oid]);
    X_378:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, C_373:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_382:bat[:oid] := algebra.thetaselect(X_378:bat[:bit], true:bit, "==":str);
    C_383:bat[:oid] := algebra.projection(C_382:bat[:oid], C_373:bat[:oid]);
    X_386:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_383:bat[:oid]);
    X_389:bat[:timestamp] := bat.replace(X_371:bat[:timestamp], C_383:bat[:oid], X_386:bat[:timestamp], true:bit);
    C_390:bat[:oid] := algebra.difference(C_373:bat[:oid], C_383:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_394:bat[:oid] := algebra.projection(C_390:bat[:oid], C_373:bat[:oid]);
    X_398:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, C_394:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_401:bat[:oid] := algebra.thetaselect(X_398:bat[:bit], true:bit, "==":str);
    C_403:bat[:oid] := algebra.projection(C_401:bat[:oid], C_394:bat[:oid]);
    X_406:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_403:bat[:oid]);
    X_407:bat[:timestamp] := bat.replace(X_389:bat[:timestamp], C_403:bat[:oid], X_406:bat[:timestamp], true:bit);
    C_408:bat[:oid] := algebra.difference(C_394:bat[:oid], C_403:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_409:bat[:oid] := algebra.projection(C_408:bat[:oid], C_394:bat[:oid]);
    X_414:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, C_409:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_418:bat[:oid] := algebra.thetaselect(X_414:bat[:bit], true:bit, "==":str);
    C_419:bat[:oid] := algebra.projection(C_418:bat[:oid], C_409:bat[:oid]);
    X_422:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_419:bat[:oid]);
    X_425:bat[:timestamp] := bat.replace(X_407:bat[:timestamp], C_419:bat[:oid], X_422:bat[:timestamp], true:bit);
    C_426:bat[:oid] := algebra.difference(C_409:bat[:oid], C_419:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_430:bat[:oid] := algebra.projection(C_426:bat[:oid], C_409:bat[:oid]);
    X_434:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, C_430:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_437:bat[:oid] := algebra.thetaselect(X_434:bat[:bit], true:bit, "==":str);
    C_439:bat[:oid] := algebra.projection(C_437:bat[:oid], C_430:bat[:oid]);
    X_442:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_439:bat[:oid]);
    X_443:bat[:timestamp] := bat.replace(X_425:bat[:timestamp], C_439:bat[:oid], X_442:bat[:timestamp], true:bit);
    C_444:bat[:oid] := algebra.difference(C_430:bat[:oid], C_439:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_445:bat[:oid] := algebra.projection(C_444:bat[:oid], C_430:bat[:oid]);
    X_450:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, C_445:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_454:bat[:oid] := algebra.thetaselect(X_450:bat[:bit], true:bit, "==":str);
    C_455:bat[:oid] := algebra.projection(C_454:bat[:oid], C_445:bat[:oid]);
    X_458:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_455:bat[:oid]);
    X_461:bat[:timestamp] := bat.replace(X_443:bat[:timestamp], C_455:bat[:oid], X_458:bat[:timestamp], true:bit);
    C_462:bat[:oid] := algebra.difference(C_445:bat[:oid], C_455:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_466:bat[:oid] := algebra.projection(C_462:bat[:oid], C_445:bat[:oid]);
    X_470:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, C_466:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_473:bat[:oid] := algebra.thetaselect(X_470:bat[:bit], true:bit, "==":str);
    C_475:bat[:oid] := algebra.projection(C_473:bat[:oid], C_466:bat[:oid]);
    X_478:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_475:bat[:oid]);
    X_479:bat[:timestamp] := bat.replace(X_461:bat[:timestamp], C_475:bat[:oid], X_478:bat[:timestamp], true:bit);
    C_480:bat[:oid] := algebra.difference(C_466:bat[:oid], C_475:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_481:bat[:oid] := algebra.projection(C_480:bat[:oid], C_466:bat[:oid]);
    X_486:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, C_481:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_490:bat[:oid] := algebra.thetaselect(X_486:bat[:bit], true:bit, "==":str);
    C_491:bat[:oid] := algebra.projection(C_490:bat[:oid], C_481:bat[:oid]);
    X_494:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_491:bat[:oid]);
    X_497:bat[:timestamp] := bat.replace(X_479:bat[:timestamp], C_491:bat[:oid], X_494:bat[:timestamp], true:bit);
    C_498:bat[:oid] := algebra.difference(C_481:bat[:oid], C_491:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_502:bat[:oid] := algebra.projection(C_498:bat[:oid], C_481:bat[:oid]);
    X_506:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, C_502:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_509:bat[:oid] := algebra.thetaselect(X_506:bat[:bit], true:bit, "==":str);
    C_511:bat[:oid] := algebra.projection(C_509:bat[:oid], C_502:bat[:oid]);
    X_514:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_511:bat[:oid]);
    X_515:bat[:timestamp] := bat.replace(X_497:bat[:timestamp], C_511:bat[:oid], X_514:bat[:timestamp], true:bit);
    C_516:bat[:oid] := algebra.difference(C_502:bat[:oid], C_511:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_517:bat[:oid] := algebra.projection(C_516:bat[:oid], C_502:bat[:oid]);
    X_522:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, C_517:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_526:bat[:oid] := algebra.thetaselect(X_522:bat[:bit], true:bit, "==":str);
    C_527:bat[:oid] := algebra.projection(C_526:bat[:oid], C_517:bat[:oid]);
    X_530:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_527:bat[:oid]);
    X_533:bat[:timestamp] := bat.replace(X_515:bat[:timestamp], C_527:bat[:oid], X_530:bat[:timestamp], true:bit);
    C_534:bat[:oid] := algebra.difference(C_517:bat[:oid], C_527:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_538:bat[:oid] := algebra.projection(C_534:bat[:oid], C_517:bat[:oid]);
    X_542:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, C_538:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_545:bat[:oid] := algebra.thetaselect(X_542:bat[:bit], true:bit, "==":str);
    C_547:bat[:oid] := algebra.projection(C_545:bat[:oid], C_538:bat[:oid]);
    X_550:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_547:bat[:oid]);
    X_551:bat[:timestamp] := bat.replace(X_533:bat[:timestamp], C_547:bat[:oid], X_550:bat[:timestamp], true:bit);
    C_552:bat[:oid] := algebra.difference(C_538:bat[:oid], C_547:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_553:bat[:oid] := algebra.projection(C_552:bat[:oid], C_538:bat[:oid]);
    X_558:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, C_553:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_562:bat[:oid] := algebra.thetaselect(X_558:bat[:bit], true:bit, "==":str);
    C_563:bat[:oid] := algebra.projection(C_562:bat[:oid], C_553:bat[:oid]);
    X_566:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_563:bat[:oid]);
    X_569:bat[:timestamp] := bat.replace(X_551:bat[:timestamp], C_563:bat[:oid], X_566:bat[:timestamp], true:bit);
    C_570:bat[:oid] := algebra.difference(C_553:bat[:oid], C_563:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_574:bat[:oid] := algebra.projection(C_570:bat[:oid], C_553:bat[:oid]);
    X_578:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, C_574:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_581:bat[:oid] := algebra.thetaselect(X_578:bat[:bit], true:bit, "==":str);
    C_583:bat[:oid] := algebra.projection(C_581:bat[:oid], C_574:bat[:oid]);
    X_586:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_583:bat[:oid]);
    X_587:bat[:timestamp] := bat.replace(X_569:bat[:timestamp], C_583:bat[:oid], X_586:bat[:timestamp], true:bit);
    C_588:bat[:oid] := algebra.difference(C_574:bat[:oid], C_583:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_589:bat[:oid] := algebra.projection(C_588:bat[:oid], C_574:bat[:oid]);
    X_594:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, C_589:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_598:bat[:oid] := algebra.thetaselect(X_594:bat[:bit], true:bit, "==":str);
    C_599:bat[:oid] := algebra.projection(C_598:bat[:oid], C_589:bat[:oid]);
    X_602:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_599:bat[:oid]);
    X_605:bat[:timestamp] := bat.replace(X_587:bat[:timestamp], C_599:bat[:oid], X_602:bat[:timestamp], true:bit);
    C_606:bat[:oid] := algebra.difference(C_589:bat[:oid], C_599:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_610:bat[:oid] := algebra.projection(C_606:bat[:oid], C_589:bat[:oid]);
    X_614:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, C_610:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_617:bat[:oid] := algebra.thetaselect(X_614:bat[:bit], true:bit, "==":str);
    C_619:bat[:oid] := algebra.projection(C_617:bat[:oid], C_610:bat[:oid]);
    X_622:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_619:bat[:oid]);
    X_623:bat[:timestamp] := bat.replace(X_605:bat[:timestamp], C_619:bat[:oid], X_622:bat[:timestamp], true:bit);
    C_624:bat[:oid] := algebra.difference(C_610:bat[:oid], C_619:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_625:bat[:oid] := algebra.projection(C_624:bat[:oid], C_610:bat[:oid]);
    X_630:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, C_625:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_634:bat[:oid] := algebra.thetaselect(X_630:bat[:bit], true:bit, "==":str);
    C_635:bat[:oid] := algebra.projection(C_634:bat[:oid], C_625:bat[:oid]);
    X_638:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_635:bat[:oid]);
    X_641:bat[:timestamp] := bat.replace(X_623:bat[:timestamp], C_635:bat[:oid], X_638:bat[:timestamp], true:bit);
    C_642:bat[:oid] := algebra.difference(C_625:bat[:oid], C_635:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_646:bat[:oid] := algebra.projection(C_642:bat[:oid], C_625:bat[:oid]);
    X_650:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, C_646:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_653:bat[:oid] := algebra.thetaselect(X_650:bat[:bit], true:bit, "==":str);
    C_655:bat[:oid] := algebra.projection(C_653:bat[:oid], C_646:bat[:oid]);
    X_658:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_655:bat[:oid]);
    X_659:bat[:timestamp] := bat.replace(X_641:bat[:timestamp], C_655:bat[:oid], X_658:bat[:timestamp], true:bit);
    C_660:bat[:oid] := algebra.difference(C_646:bat[:oid], C_655:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_661:bat[:oid] := algebra.projection(C_660:bat[:oid], C_646:bat[:oid]);
    X_666:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, C_661:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_670:bat[:oid] := algebra.thetaselect(X_666:bat[:bit], true:bit, "==":str);
    C_671:bat[:oid] := algebra.projection(C_670:bat[:oid], C_661:bat[:oid]);
    X_674:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_671:bat[:oid]);
    X_677:bat[:timestamp] := bat.replace(X_659:bat[:timestamp], C_671:bat[:oid], X_674:bat[:timestamp], true:bit);
    C_678:bat[:oid] := algebra.difference(C_661:bat[:oid], C_671:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_682:bat[:oid] := algebra.projection(C_678:bat[:oid], C_661:bat[:oid]);
    X_686:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, C_682:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_689:bat[:oid] := algebra.thetaselect(X_686:bat[:bit], true:bit, "==":str);
    C_691:bat[:oid] := algebra.projection(C_689:bat[:oid], C_682:bat[:oid]);
    X_694:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_691:bat[:oid]);
    X_695:bat[:timestamp] := bat.replace(X_677:bat[:timestamp], C_691:bat[:oid], X_694:bat[:timestamp], true:bit);
    C_696:bat[:oid] := algebra.difference(C_682:bat[:oid], C_691:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_697:bat[:oid] := algebra.projection(C_696:bat[:oid], C_682:bat[:oid]);
    X_702:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, C_697:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_706:bat[:oid] := algebra.thetaselect(X_702:bat[:bit], true:bit, "==":str);
    C_707:bat[:oid] := algebra.projection(C_706:bat[:oid], C_697:bat[:oid]);
    X_710:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_707:bat[:oid]);
    X_713:bat[:timestamp] := bat.replace(X_695:bat[:timestamp], C_707:bat[:oid], X_710:bat[:timestamp], true:bit);
    C_714:bat[:oid] := algebra.difference(C_697:bat[:oid], C_707:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_718:bat[:oid] := algebra.projection(C_714:bat[:oid], C_697:bat[:oid]);
    X_722:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, C_718:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_725:bat[:oid] := algebra.thetaselect(X_722:bat[:bit], true:bit, "==":str);
    C_727:bat[:oid] := algebra.projection(C_725:bat[:oid], C_718:bat[:oid]);
    X_730:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_727:bat[:oid]);
    X_731:bat[:timestamp] := bat.replace(X_713:bat[:timestamp], C_727:bat[:oid], X_730:bat[:timestamp], true:bit);
    C_732:bat[:oid] := algebra.difference(C_718:bat[:oid], C_727:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_733:bat[:oid] := algebra.projection(C_732:bat[:oid], C_718:bat[:oid]);
    X_738:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, C_733:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_742:bat[:oid] := algebra.thetaselect(X_738:bat[:bit], true:bit, "==":str);
    C_743:bat[:oid] := algebra.projection(C_742:bat[:oid], C_733:bat[:oid]);
    X_746:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_743:bat[:oid]);
    X_749:bat[:timestamp] := bat.replace(X_731:bat[:timestamp], C_743:bat[:oid], X_746:bat[:timestamp], true:bit);
    C_750:bat[:oid] := algebra.difference(C_733:bat[:oid], C_743:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_754:bat[:oid] := algebra.projection(C_750:bat[:oid], C_733:bat[:oid]);
    X_758:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, C_754:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_761:bat[:oid] := algebra.thetaselect(X_758:bat[:bit], true:bit, "==":str);
    C_763:bat[:oid] := algebra.projection(C_761:bat[:oid], C_754:bat[:oid]);
    X_766:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_763:bat[:oid]);
    X_767:bat[:timestamp] := bat.replace(X_749:bat[:timestamp], C_763:bat[:oid], X_766:bat[:timestamp], true:bit);
    C_768:bat[:oid] := algebra.difference(C_754:bat[:oid], C_763:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_769:bat[:oid] := algebra.projection(C_768:bat[:oid], C_754:bat[:oid]);
    X_774:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, C_769:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_778:bat[:oid] := algebra.thetaselect(X_774:bat[:bit], true:bit, "==":str);
    C_779:bat[:oid] := algebra.projection(C_778:bat[:oid], C_769:bat[:oid]);
    X_782:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_779:bat[:oid]);
    X_785:bat[:timestamp] := bat.replace(X_767:bat[:timestamp], C_779:bat[:oid], X_782:bat[:timestamp], true:bit);
    C_786:bat[:oid] := algebra.difference(C_769:bat[:oid], C_779:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_790:bat[:oid] := algebra.projection(C_786:bat[:oid], C_769:bat[:oid]);
    X_794:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, C_790:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_797:bat[:oid] := algebra.thetaselect(X_794:bat[:bit], true:bit, "==":str);
    C_799:bat[:oid] := algebra.projection(C_797:bat[:oid], C_790:bat[:oid]);
    X_802:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_799:bat[:oid]);
    X_803:bat[:timestamp] := bat.replace(X_785:bat[:timestamp], C_799:bat[:oid], X_802:bat[:timestamp], true:bit);
    C_804:bat[:oid] := algebra.difference(C_790:bat[:oid], C_799:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_805:bat[:oid] := algebra.projection(C_804:bat[:oid], C_790:bat[:oid]);
    X_810:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, C_805:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_814:bat[:oid] := algebra.thetaselect(X_810:bat[:bit], true:bit, "==":str);
    C_815:bat[:oid] := algebra.projection(C_814:bat[:oid], C_805:bat[:oid]);
    X_818:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_815:bat[:oid]);
    X_821:bat[:timestamp] := bat.replace(X_803:bat[:timestamp], C_815:bat[:oid], X_818:bat[:timestamp], true:bit);
    C_822:bat[:oid] := algebra.difference(C_805:bat[:oid], C_815:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_826:bat[:oid] := algebra.projection(C_822:bat[:oid], C_805:bat[:oid]);
    X_830:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, C_826:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_833:bat[:oid] := algebra.thetaselect(X_830:bat[:bit], true:bit, "==":str);
    C_835:bat[:oid] := algebra.projection(C_833:bat[:oid], C_826:bat[:oid]);
    X_838:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_835:bat[:oid]);
    X_839:bat[:timestamp] := bat.replace(X_821:bat[:timestamp], C_835:bat[:oid], X_838:bat[:timestamp], true:bit);
    C_840:bat[:oid] := algebra.difference(C_826:bat[:oid], C_835:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_841:bat[:oid] := algebra.projection(C_840:bat[:oid], C_826:bat[:oid]);
    X_846:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, C_841:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_850:bat[:oid] := algebra.thetaselect(X_846:bat[:bit], true:bit, "==":str);
    C_851:bat[:oid] := algebra.projection(C_850:bat[:oid], C_841:bat[:oid]);
    X_854:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_851:bat[:oid]);
    X_857:bat[:timestamp] := bat.replace(X_839:bat[:timestamp], C_851:bat[:oid], X_854:bat[:timestamp], true:bit);
    C_858:bat[:oid] := algebra.difference(C_841:bat[:oid], C_851:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_862:bat[:oid] := algebra.projection(C_858:bat[:oid], C_841:bat[:oid]);
    X_866:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, C_862:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_869:bat[:oid] := algebra.thetaselect(X_866:bat[:bit], true:bit, "==":str);
    C_871:bat[:oid] := algebra.projection(C_869:bat[:oid], C_862:bat[:oid]);
    X_874:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng, C_871:bat[:oid]);
    X_875:bat[:timestamp] := bat.replace(X_857:bat[:timestamp], C_871:bat[:oid], X_874:bat[:timestamp], true:bit);
    C_876:bat[:oid] := algebra.difference(C_862:bat[:oid], C_871:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_877:bat[:oid] := algebra.projection(C_876:bat[:oid], C_862:bat[:oid]);
    X_879:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng, C_877:bat[:oid]);
    X_880:bat[:timestamp] := bat.replace(X_875:bat[:timestamp], C_877:bat[:oid], X_879:bat[:timestamp], true:bit);
    X_888:bat[:str] := bat.pack(".":str);
    X_889:bat[:str] := bat.pack("yearref":str);
    X_890:bat[:str] := bat.pack("clob":str);
    X_891:bat[:int] := bat.pack(0:int);
    X_881:bat[:timestamp] := batcalc.timestamp(X_880:bat[:timestamp], nil:BAT, 7:int);
    X_885:bat[:str] := batmtime.timestamp_to_str(X_881:bat[:timestamp], "%Y":str, nil:BAT);
    language.pass(X_43:bat[:str]);
    language.pass(C_58:bat[:oid]);
    language.pass(C_65:bat[:oid]);
    language.pass(C_79:bat[:oid]);
    language.pass(C_70:bat[:oid]);
    language.pass(C_95:bat[:oid]);
    language.pass(C_85:bat[:oid]);
    language.pass(C_115:bat[:oid]);
    language.pass(C_106:bat[:oid]);
    language.pass(C_131:bat[:oid]);
    language.pass(C_121:bat[:oid]);
    language.pass(C_151:bat[:oid]);
    language.pass(C_142:bat[:oid]);
    language.pass(C_167:bat[:oid]);
    language.pass(C_157:bat[:oid]);
    language.pass(C_187:bat[:oid]);
    language.pass(C_178:bat[:oid]);
    language.pass(C_203:bat[:oid]);
    language.pass(C_193:bat[:oid]);
    language.pass(C_223:bat[:oid]);
    language.pass(C_214:bat[:oid]);
    language.pass(C_239:bat[:oid]);
    language.pass(C_229:bat[:oid]);
    language.pass(C_259:bat[:oid]);
    language.pass(C_250:bat[:oid]);
    language.pass(C_275:bat[:oid]);
    language.pass(C_265:bat[:oid]);
    language.pass(C_295:bat[:oid]);
    language.pass(C_286:bat[:oid]);
    language.pass(C_311:bat[:oid]);
    language.pass(C_301:bat[:oid]);
    language.pass(C_331:bat[:oid]);
    language.pass(C_322:bat[:oid]);
    language.pass(C_347:bat[:oid]);
    language.pass(C_337:bat[:oid]);
    language.pass(C_367:bat[:oid]);
    language.pass(C_358:bat[:oid]);
    language.pass(C_383:bat[:oid]);
    language.pass(C_373:bat[:oid]);
    language.pass(C_403:bat[:oid]);
    language.pass(C_394:bat[:oid]);
    language.pass(C_419:bat[:oid]);
    language.pass(C_409:bat[:oid]);
    language.pass(C_439:bat[:oid]);
    language.pass(C_430:bat[:oid]);
    language.pass(C_455:bat[:oid]);
    language.pass(C_445:bat[:oid]);
    language.pass(C_475:bat[:oid]);
    language.pass(C_466:bat[:oid]);
    language.pass(C_491:bat[:oid]);
    language.pass(C_481:bat[:oid]);
    language.pass(C_511:bat[:oid]);
    language.pass(C_502:bat[:oid]);
    language.pass(C_527:bat[:oid]);
    language.pass(C_517:bat[:oid]);
    language.pass(C_547:bat[:oid]);
    language.pass(C_538:bat[:oid]);
    language.pass(C_563:bat[:oid]);
    language.pass(C_553:bat[:oid]);
    language.pass(C_583:bat[:oid]);
    language.pass(C_574:bat[:oid]);
    language.pass(C_599:bat[:oid]);
    language.pass(C_589:bat[:oid]);
    language.pass(C_619:bat[:oid]);
    language.pass(C_610:bat[:oid]);
    language.pass(C_635:bat[:oid]);
    language.pass(C_625:bat[:oid]);
    language.pass(C_655:bat[:oid]);
    language.pass(C_646:bat[:oid]);
    language.pass(C_671:bat[:oid]);
    language.pass(C_661:bat[:oid]);
    language.pass(C_691:bat[:oid]);
    language.pass(C_682:bat[:oid]);
    language.pass(C_707:bat[:oid]);
    language.pass(C_697:bat[:oid]);
    language.pass(C_727:bat[:oid]);
    language.pass(C_718:bat[:oid]);
    language.pass(C_743:bat[:oid]);
    language.pass(C_733:bat[:oid]);
    language.pass(C_763:bat[:oid]);
    language.pass(C_754:bat[:oid]);
    language.pass(C_779:bat[:oid]);
    language.pass(C_769:bat[:oid]);
    language.pass(C_799:bat[:oid]);
    language.pass(C_790:bat[:oid]);
    language.pass(C_815:bat[:oid]);
    language.pass(C_805:bat[:oid]);
    language.pass(C_835:bat[:oid]);
    language.pass(C_826:bat[:oid]);
    language.pass(C_851:bat[:oid]);
    language.pass(C_841:bat[:oid]);
    language.pass(C_871:bat[:oid]);
    language.pass(C_862:bat[:oid]);
    language.pass(X_45:bat[:timestamp]);
    language.pass(C_877:bat[:oid]);
exit X_1044:bit;
    sql.resultSet(X_888:bat[:str], X_889:bat[:str], X_890:bat[:str], X_891:bat[:int], X_891:bat[:int], X_885:bat[:str]);
end user.main;
# optimizer.mitosis()
# optimizer.dataflow()
#inline               actions= 0 time=36 usec 
#remap                actions=368 time=710 usec 
#costmodel            actions= 1 time=12 usec 
#coercion             actions=416 time=78 usec 
#aliases              actions=649 time=118 usec 
#evaluate             actions=185 time=356 usec 
#emptybind            actions=11 time=51 usec 
#pushselect           actions= 0 time=18 usec 
#aliases              actions=188 time=68 usec 
#mergetable           actions= 0 time=164 usec 
#deadcode             actions=18 time=48 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

