statement ok
create table pk1 (
	pk1	int generated always as identity not null primary key,
	v1	int
)

statement ok
create table pk2 (
	pk2	int generated always as identity not null primary key,
	v2	int
)

statement ok
create table fk (
	id	int generated always as identity not null primary key,
	fk1	int references pk1(pk1),
	fk2	int references pk2(pk2)
)

statement ok
create view v0 as (
	select * from fk
)

statement ok
create view v1 as (
	select * from fk
	left outer join pk1 on fk.fk1 = pk1.pk1
)

statement ok
create view v2 as (
	select * from fk
	left outer join pk1 on fk.fk1 = pk1.pk1
	left outer join pk2 on fk.fk2 = pk2.pk2
)

statement ok
insert into pk1 (v1) values (11),(12),(13),(14)

statement ok
insert into pk2 (v2) values (21),(22),(23),(24)

statement ok
insert into fk (fk1,fk2) values (1,1),(1,2),(2,1),(null,3),(4,null),(null,null)

query II rowsort
select * from pk1 order by pk1
----
1
11
2
12
3
13
4
14

query II rowsort
select * from pk2 order by pk2
----
1
21
2
22
3
23
4
24

query III rowsort
select * from fk order by id
----
18 values hashing to 8bc2f358c75f8e5966d5aefe38bb0788

query III rowsort
select * from v0 order by id
----
18 values hashing to 8bc2f358c75f8e5966d5aefe38bb0788

query IIIII rowsort
select * from v1 order by id
----
30 values hashing to afa7e724aef2e99568ca3511b44ac70d

query IIIIIII rowsort
select * from v2 order by id
----
42 values hashing to d768efe925a1bb7d774fe18389c0e0c6

query I rowsort
select count(*) from fk
----
6

query I rowsort
select count(*) from v0
----
6

query I rowsort
select count(*) from fk left outer join pk1 on fk.fk1 = pk1.pk1
----
6

query I rowsort
select count(*) from v1
----
6

query I rowsort
select count(*) from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2
----
6

query I rowsort
select count(*) from v2
----
6

query I rowsort
select id       from fk order by id
----
1
2
3
4
5
6

query I rowsort
select id       from v0 order by id
----
1
2
3
4
5
6

query I rowsort
select id       from fk left outer join pk1 on fk.fk1 = pk1.pk1 order by id
----
1
2
3
4
5
6

query I rowsort
select id       from v1 order by id
----
1
2
3
4
5
6

query I rowsort
select id       from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
1
2
3
4
5
6

query I rowsort
select id       from v2 order by id
----
1
2
3
4
5
6

query II rowsort
select id , v1  from v1 order by id
----
12 values hashing to 4f3931cea4ae6856ca866a209b5967d2

query II rowsort
select id , v1  from fk left outer join pk1 on fk.fk1 = pk1.pk1 order by id
----
12 values hashing to 4f3931cea4ae6856ca866a209b5967d2

query II rowsort
select id , v2  from fk left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
12 values hashing to 8cc3e9da15e8756e70edc02df53a1eb8

query II rowsort
select id , v1  from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
12 values hashing to 4f3931cea4ae6856ca866a209b5967d2

query II rowsort
select id , v2  from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
12 values hashing to 8cc3e9da15e8756e70edc02df53a1eb8

query II rowsort
select id , v2  from v2 order by id
----
12 values hashing to 8cc3e9da15e8756e70edc02df53a1eb8


