statement ok
function load():bat[:lng];
b:= bat.new(:lng);
k:=0;
INT_MAX := 2147483647;
dbgmsk_restore := mdb.getDebug();
dbgmsk_unset := 8+8388608;
dbgmsk_keep := calc.xor(INT_MAX,dbgmsk_unset);
dbgmsk_set := calc.and(dbgmsk_restore,dbgmsk_keep);
mdb.setDebug(dbgmsk_set);
barrier i:= 0:lng;
	k:= k+1;
	l:= calc.lng(k);
	bat.append(b,l);
	redo i:= iterator.next(1:lng,100000:lng);
exit i;
mdb.setDebug(dbgmsk_restore);
	return b;
end load;

statement ok
function qry(z:bat[:lng],low:int,hgh:int):lng;
	l:= calc.lng(low);
	h:= calc.lng(hgh);
	s:= algebra.select(z,nil:bat[:oid],l,h,true,true,false);
	c:= aggr.count(s);
	return qry:= c;
end qry;

statement ok
s:= load();

statement ok
t1:= 0:lng;

statement ok
t2:= 0:lng;

statement ok
t3:= 0:lng;

statement ok
t4:= 0:lng;

statement ok
c := 0:lng;


