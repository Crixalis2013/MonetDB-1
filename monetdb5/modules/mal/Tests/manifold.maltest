statement ok
t0:= alarm.usec()

statement ok
b:= bat.new(:dbl)

statement ok
INT_MAX := 2147483647

statement ok
dbgmsk_restore := mdb.getDebug()

statement ok
dbgmsk_unset := 8+8388608

statement ok
dbgmsk_keep := calc.xor(INT_MAX,dbgmsk_unset)

statement ok
dbgmsk_set := calc.and(dbgmsk_restore,dbgmsk_keep)

statement ok
mdb.setDebug(dbgmsk_set)

statement ok
r:= mmath.srand(0)

statement ok
barrier i:= 0:lng

statement ok
	k:= mmath.rand()

statement ok
	l:= calc.dbl(k)

statement ok
	bat.append(b,l)

statement ok
	redo i:= iterator.next(1:lng,10000:lng)

statement ok
exit i

statement ok
mdb.setDebug(dbgmsk_restore)

statement ok
mdb.setDebug(dbgmsk_set)

statement ok
t0:= alarm.usec()

statement ok
z:bat[:dbl]:= mal.manifold("mmath","sin",b)

statement ok
t1:= alarm.usec()

statement ok
d0:= t1-t0

#query T rowsort
#io.printf("#mal.manifold(sin) %d\n",d0)
#----
##mal.manifold(sin) 3843

statement ok
s:= aggr.sum(z)

query T rowsort
io.printf("#sum %f\n",s)
----
#sum -127.092248

statement ok
t0:= alarm.usec()

statement ok
x:= bat.new(:dbl)

statement ok
barrier j:= 0@0

statement ok
	ii:= algebra.fetch(b,j)

statement ok
	d:= mmath.sin(ii)

statement ok
	bat.append(x,d)

statement ok
	redo j:= iterator.next(1@0,10000@0)

statement ok
exit j

statement ok
t1:= alarm.usec()

statement ok
d0:= t1-t0

#query T rowsort
#io.printf("#mal.multiplex(sin) %d\n",d0)
#----
##mal.multiplex(sin) 16168

statement ok
s:= aggr.sum(x)

query T rowsort
io.printf("#sum %f\n",s)
----
#sum -127.092248

statement ok
t0:= alarm.usec()

statement ok
x:= batmmath.sin(b)

statement ok
t1:= alarm.usec()

statement ok
d0:= t1-t0

#query T rowsort
#io.printf("#mmath.sin() %d\n",d0)
#----
##mmath.sin() 1122

statement ok
s:= aggr.sum(x)

query T rowsort
io.printf("#sum %f\n",s)
----
#sum -127.092248


