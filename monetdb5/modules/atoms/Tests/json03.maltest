statement ok
js:= calc.json("{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 }")

statement ok
(k,v):= json.unfold(js)

query TTT rowsort
io.print(k,v)
----
12 values hashing to 913a0bcee15b7f48acf0be80a7ba3d92

statement ok
jsn:= json.fold(k,v)

query T rowsort
io.print(jsn)
----
"[\"category\":\"reference\",\"author\":\"Nigel Rees\",\"title\":\"Sayings of the Century\",\"price\":8.95]"

statement ok
(o,l,w):= json.unfold(js)

query TTTT rowsort
io.print(o,l,w)
----
16 values hashing to 822830013db6f4c97f5f27082fd37d4f

statement ok
jsm:= json.fold(o,l,w)

query T rowsort
io.print(jsm)
----
"[\"category\":\"reference\",, \"author\":\"Nigel Rees\",, \"title\":\"Sayings of the Century\",, \"price\":8.95]"

statement ok
js:= calc.json("[{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 }, { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 }, { \"category\": \"fiction\", \"author\": \"Herman Melville\", \"title\": \"Moby Dick\", \"isbn\": \"0-553-21311-3\", \"price\": 8.99 }, { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 }, { \"color\": \"red\", \"price\": 19.95 }]")

query T rowsort
io.print(js)
----
"[{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 }, { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 }, { \"category\": \"fiction\", \"author\": \"Herman Melville\", \"title\": \"Moby Dick\", \"isbn\": \"0-553-21311-3\", \"price\": 8.99 }, { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 }, { \"color\": \"red\", \"price\": 19.95 }]"

statement ok
(k,v):= json.unfold(js)

query TTT rowsort
io.print(k,v)
----
15 values hashing to 645f321ead728611dff209aa675ad1b5

statement ok
jsn:= json.fold(k,v)

query T rowsort
io.print(jsn)
----
"[{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 },{ \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 },{ \"category\": \"fiction\", \"author\": \"Herman Melville\", \"title\": \"Moby Dick\", \"isbn\": \"0-553-21311-3\", \"price\": 8.99 },{ \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 },{ \"color\": \"red\", \"price\": 19.95 }]"

statement ok
(o,l,w):= json.unfold(js)

query TTTT rowsort
io.print(o,l,w)
----
20 values hashing to fc6ad02223c7c77e23d71dfddfd44d8c

statement ok
jsm:= json.fold(o,l,w)

query T rowsort
io.print(jsm)
----
"[{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 },, { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 },, { \"category\": \"fiction\", \"author\": \"Herman Melville\", \"title\": \"Moby Dick\", \"isbn\": \"0-553-21311-3\", \"price\": 8.99 },, { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 },, { \"color\": \"red\", \"price\": 19.95 }]"

statement ok
b:= bat.new(:int)

statement ok
bat.append(b,1)

statement ok
bat.append(b,22)

statement ok
bat.append(b,333)

statement ok
bl:= json.fold(b)

query T rowsort
io.print(bl)
----
"[1,22,333]"

statement ok
bat.append(b,2)

statement ok
bat.append(b,3)

statement ok
bat.append(b,4)

statement ok
n:= bat.new(:str)

statement ok
bat.append(n,"a")

statement ok
bat.append(n,"b")

statement ok
bat.append(n,"c")

statement ok
bat.append(n,"a")

statement ok
bat.append(n,"c")

statement ok
bat.append(n,"b")

statement ok
i:= bat.new(:oid)

statement ok
bat.append(i,0@0)

statement ok
bat.append(i,0@0)

statement ok
bat.append(i,0@0)

statement ok
bat.append(i,1@0)

statement ok
bat.append(i,1@0)

statement ok
bat.append(i,2@0)

statement ok
jsn:= json.fold(i,n,b)

query T rowsort
io.print(jsn)
----
"[\"a\":1,\"b\":22,\"c\":333,, \"a\":2,\"c\":3,, \"b\":4]"


