statement ok
b:= json.new("{\"f1\":1}")

statement ok
f:= json.keys(b)

query TT rowsort
io.print(f)
----
0
f1

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
0
1

statement ok
b:= json.new("{\"f1\":1,\"f2\":2}")

statement ok
f:= json.keys(b)

query TT rowsort
io.print(f)
----
0
f1
1
f2

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
0
1
1
2

statement ok
b:= json.new("{\"f1\":1,\"f2\":2,\"f1\":3}")

statement ok
f:= json.keys(b)

query TT rowsort
io.print(f)
----
0
f1
1
f2
2
f1

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
0
1
1
2
2
3

statement ok
b:= json.new("{\"f1\":{\"f12\":3},\"f2\":[2,3,4]}")

statement ok
f:= json.keys(b)

query TT rowsort
io.print(f)
----
0
f1
1
f2

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
0
{"f12":3}
1
[2,3,4]

statement ok
i:= json.length(b)

query T rowsort
io.print(i)
----
2

statement ok
b:= json.new("[]")

statement ok
z:= json.isarray(b)

query T rowsort
io.print(z)
----
true

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----

statement ok
i:= json.length(b)

query T rowsort
io.print(i)
----
0

statement ok
b:= json.new("[1,\"f2\", 2]")

statement ok
z:= json.isarray(b)

query T rowsort
io.print(z)
----
true

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
0
1
1
"f2"
2
2

statement ok
b:= json.new("[1,2,null,true,false ]")

statement ok
z:= json.isarray(b)

query T rowsort
io.print(z)
----
true

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
10 values hashing to 4773210d63177d2ad4e6e3f46b02ce29

statement ok
i:= json.length(b)

query T rowsort
io.print(i)
----
5

statement ok
b:= json.new("[\"\\/\" , 2 ]")

statement ok
z:= json.isarray(b)

query T rowsort
io.print(z)
----
true

statement ok
ff:= json.values(b)

query TT rowsort
io.print(ff)
----
0
"\/"
1
2


